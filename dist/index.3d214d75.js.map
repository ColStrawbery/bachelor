{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,IAAI,cAAc;AAAM,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAE9K,8JAA8J,GAC9J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AAEzJ,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS,IAAI;AAClC;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAe,AAAD,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,QAAQ,IAAI,YAAY,CAAC;QAAC;QAAa;QAAa;KAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ;IAClI,IAAI;IACJ,IAAI,aACF,KAAK,IAAI,YAAY;SAErB,IAAI;QACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAC9E,EAAE,OAAO,KAAK;QACZ,IAAI,IAAI,OAAO,EACb,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE3B,KAAK,CAAC;IACR;IAGF,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IAEA,aAAa;IACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;QAClD,IAAI,KAAK,IAAI,KAAK,UAAU;YAC1B,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;gBACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;YACvH;YACA,IAAI,SAAS;gBACX,QAAQ,KAAK;gBAEb,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBAEtB,0BAA0B;gBAC1B,IAAI,kBAAkB,CAAC,EAAE,0BAA0B;gBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;oBAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;oBAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;gBAEA,8FAA8F;gBAC9F,kBAAkB,CAAC;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,IAAI,KAAK,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;gBACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;gBACtD,aAAa;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF;IACF;IACA,IAAI,cAAc,WAAW;QAC3B,GAAG,OAAO,GAAG,SAAU,CAAC;YACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;QAE3B;QACA,GAAG,OAAO,GAAG;YACX,QAAQ,IAAI,CAAC;QACf;IACF;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,CAAC,EAAE,EAAE;sCACoB,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACvL,EAAE,MAAM,IAAI,CAAC,CAAC;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa,CAAC;;;oBAGL,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS,MAAM;SACV,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC1D,OAAO,OAAO,CAAC,MAAM;AAEzB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC,OAAO,IAAI,OAAO,MAAM,EACtB,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAChB,OAAO;QAET,OAAO,eAAe,OAAO,MAAM,EAAE,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;QACxC;QACA,IAAI,sBAAsB,eAAe,MAAM,EAAE;YAC/C,mBAAmB,OAAO,CAAC,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,IAAI,CAAC,KAAK,CAAC,gBAAgB;QAC5C;IACF;AAEJ;;;;ACvfA;;AAEA,MAAM,SAAS,IAAI,CAAA,GAAA,gCAAgB,AAAD,EAAE;IAChC,IAAI,SAAS,aAAa,CAAC;IAC3B,QAAQ;AAEZ;AAEA,QAAQ,GAAG,CAAC;;;;;AEUSA,6CAAAA;AAAAA;;AAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,CAAAA,QAAAA,KAAAA,IAAAA,EAAAA,MAAAA,AAAAA,KAAAA,CAAAA,IAAAA,EAAAA,MAAAA,AAAAA;IAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,MAAAA,IAAAA,IAAAA,GAAAA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA;IAAAA,OAAAA;AAAAA;AAAAA,SAAAA,EAAAA,CAAAA,EAAAA,CAAAA;IAAAA,IAAAA,IAAAA,eAAAA,OAAAA,UAAAA,CAAAA,CAAAA,OAAAA,QAAAA,CAAAA,IAAAA,CAAAA,CAAAA,aAAAA;IAAAA,IAAAA,GAAAA,OAAAA,AAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,CAAAA;IAAAA,IAAAA,MAAAA,OAAAA,CAAAA,MAAAA,CAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA;QAAAA,IAAAA,GAAAA;YAAAA,IAAAA,YAAAA,OAAAA,GAAAA,OAAAA,EAAAA,GAAAA;YAAAA,IAAAA,IAAAA,CAAAA,CAAAA,CAAAA,EAAAA,QAAAA,CAAAA,IAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA;YAAAA,OAAAA,aAAAA,KAAAA,EAAAA,WAAAA,IAAAA,CAAAA,IAAAA,EAAAA,WAAAA,CAAAA,IAAAA,AAAAA,GAAAA,UAAAA,KAAAA,UAAAA,IAAAA,MAAAA,IAAAA,CAAAA,KAAAA,gBAAAA,KAAAA,2CAAAA,IAAAA,CAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA;QAAAA;IAAAA,EAAAA,EAAAA,KAAAA,KAAAA,KAAAA,YAAAA,OAAAA,EAAAA,MAAAA,EAAAA;QAAAA,KAAAA,CAAAA,IAAAA,CAAAA;QAAAA,IAAAA,IAAAA;QAAAA,OAAAA;YAAAA,OAAAA,KAAAA,EAAAA,MAAAA,GAAAA;gBAAAA,MAAAA,CAAAA;YAAAA,IAAAA;gBAAAA,MAAAA,CAAAA;gBAAAA,OAAAA,CAAAA,CAAAA,IAAAA;YAAAA;QAAAA;IAAAA;IAAAA,MAAAA,IAAAA,UAAAA;AAAAA;AAAAA,SAAAA;IAAAA,OAAAA,IAAAA,OAAAA,MAAAA,GAAAA,OAAAA,MAAAA,CAAAA,IAAAA,KAAAA,SAAAA,CAAAA;QAAAA,IAAAA,IAAAA,IAAAA,GAAAA,IAAAA,UAAAA,MAAAA,EAAAA,IAAAA;YAAAA,IAAAA,IAAAA,SAAAA,CAAAA,EAAAA;YAAAA,IAAAA,IAAAA,KAAAA,EAAAA,AAAAA,CAAAA,CAAAA,CAAAA,EAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAAAA,AAAAA;QAAAA;QAAAA,OAAAA;IAAAA,GAAAA,EAAAA,KAAAA,CAAAA,MAAAA;AAAAA;AAAAA,IAAAA,IAAAA,WAAAA,GAMjB;IAAA,SAAAA,EAAAC,CAAAA;QACI,IAAAC,IAAcD,EAAdC,cAAAA,EAAcC,IAAAF,EACdG,UAAAA,EAAAA,IAAAA,KAAU,MAAAD,IAAG,wBAAqBA,GAClCE,IAAKJ,EAALI,KAAAA;QAAAA,IAAAA,CARGH,cAAAA,GAAAA,KAAc,GAAAI,IAAAA,CACbF,UAAAA,GAAAA,KAAU,GAAAE,IAAAA,CACVD,KAAAA,GAAAA,KAAK,GAAAC,IAAAA,CACLC,QAAAA,GAAAA,KAQJ,GAAAD,IAAAA,CAAKJ,cAAAA,GAAiBA,GACtBI,IAAAA,CAAKF,UAAAA,GAAaA,GAClBE,IAAAA,CAAKD,KAAAA,GAAQA,GAGbC,IAAAA,CAAKE,KAAAA;IACT;IAAC,IAAAC,IAAAT,EAAAU,SAAAA;IA4GA,OA5GAD,EAOOD,KAAAA,GAAA;QAAK,IAAAG,IAAAL,IAAAA;QAwBTA,IAAAA,CAAKC,QAAAA,GAAW,IAAIK,qBAjBA,SAACC,CAAAA;YACjBA,EAAQC,OAAAA,CAAQ,SAACC,CAAAA;gBACb,IAAMC,IACFL,EAAKT,cAAAA,CAAee,IAAAA,CAChB,SAACC,CAAAA;oBAAAA,OAASA,EAAKC,GAAAA,KAAQJ,EAAMK,MAAM;gBAAA;gBAGvCL,EAAMM,cAAAA,GACNL,CAAAA,KAAgBA,CAAAA,EAAYM,oBAAAA,GAAAA,CAAuB,CAAA,GACnDX,EAAKY,UAAAA,CAAWR,EAAAA,IACTC,KAAeA,EAAYM,oBAAAA,IAClCX,EAAKa,aAAAA,CAAcT;YAE3B;QACJ,GAnBwB;YACpBX,YAAYE,IAAAA,CAAKF,UAAAA;QAAAA;QAwBrB,IAAAqB,IAA+CC,GAA/CD,IAAAE,EAA4BrB,IAAAA,CAAKJ,cAAAA,GAAAA,CAAAA,AAAcwB,CAAAA,IAAAD,GAAAA,EAAAG,IAAAA,EAE3CtB,IAAAA,CAAKuB,OAAAA,CAFeH,EAAAI,KAAAA,CACiBX,GAAAA;IAG7C,GAACV,EAKMsB,OAAAA,GAAA;QACHzB,IAAAA,CAAKC,QAAAA,CAASyB,UAAAA;IAClB,GAACvB,EAOMoB,OAAAA,GAAA,SAAQI,CAAAA;QACNA,KAIL3B,IAAAA,CAAKC,QAAAA,CAASsB,OAAAA,CAAQI;IAC1B,GAACxB,EAOMyB,SAAAA,GAAA,SAAUD,CAAAA;QACRA,KAIL3B,IAAAA,CAAKC,QAAAA,CAAS2B,SAAAA,CAAUD;IAC5B,GAACxB,EASOc,UAAAA,GAAA,SAAWR,CAAAA;QACf,IAAMoB,IAAgB7B,IAAAA,CAAKJ,cAAAA,CAAee,IAAAA,CACtC,SAACkB,CAAAA;YAAkB,OAAAA,EAAchB,GAAAA,KAAQJ,EAAMK,MAAM;QAAA;QAGzDd,IAAAA,CAAKD,KAAAA,IAAsB,CAAA,QAAb8B,KAAAA,EAAeC,kBAAAA,EAAAA,GAAAA,CAC5B9B,IAAAA,CAAKD,KAAAA,IAAS8B,CAAAA,QAAAA,KAAAA,EAAeE,SAAAA,EAAAA;IAClC,GAAC5B,EASOe,aAAAA,GAAA,SAAcT,CAAAA;QAClB,IAAMoB,IAAgB7B,IAAAA,CAAKJ,cAAAA,CAAee,IAAAA,CACtC,SAACkB,CAAAA;YAAa,OAAKA,EAAchB,GAAAA,KAAQJ,EAAMK,MAAM;QAAA;QAGzDd,IAAAA,CAAKD,KAAAA,IAAS8B,CAAAA,QAAAA,KAAAA,EAAeG,mBAAAA,EAAAA,GAAAA,CAC5BhC,IAAAA,CAAKD,KAAAA,IAAsB,CAAA,QAAb8B,KAAAA,EAAeI,YAAAA,EAAAA,GAGZ,QAAbJ,KAAAA,EAAeK,UAAAA,CAAWC,YAAAA,IAAiBnC,IAAAA,CAAKD,KAAAA,IACjDC,IAAAA,CAAK4B,SAAAA,CAAUnB,EAAMK,MAAAA;IAE7B,GAACpB;AAAA;AAxHD,SCEY0C,EACZC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAhB,CAAAA;IAIA,OAAOe,IAAAA,CAAAA,AAAYf,CAAAA,IAAQa,CAAAA,IAFXC,CAAAA,IAAQD,CAAAA,IACPG,CAAAA,IAASD,CAAAA,KACiC,CAAA;AAC/D;AAuBgB,SAAAE,EAAcC,CAAAA,EAAiB5B,CAAAA;IAC3C,OAAO4B,EAAMC,MAAAA,CAAO,SAACC,CAAAA,EAAMC,CAAAA;QACvB,OAAOC,KAAKC,GAAAA,CAAIF,IAAO/B,KAAUgC,KAAKC,GAAAA,CAAIH,IAAO9B,KAAU+B,IAAOD;IACtE;AACJ;AC9BA,IAIqBI,IAAAA,WAAAA,GAwBjB;IAAA,SAAAA,EAAArD,CAAAA;QAQwBsD,IAAAA,GAAAC,GAAAC,GAAAC,GAAAC,GAPpBxC,IAAGlB,EAAHkB,GAAAA,EACAyC,IAAE3D,EAAF2D,EAAAA,EACAC,IAAe5D,EAAf4D,eAAAA,EACAC,IAAwB7D,EAAxB6D,wBAAAA,EACAC,IAA0B9D,EAA1B8D,0BAAAA,EACAC,IAAO/D,EAAP+D,OAAAA,EACAC,IAAiBhE,EAAjBgE,iBAAAA;QAAiB3D,IAAAA,CA9Bda,GAAAA,GAAAA,KACAyC,GAAAA,IAAAA,CAAAA,EAAAA,GAAAA,KACAI,GAAAA,IAAAA,CAAAA,OAAAA,GAAAA,KACAxB,GAAAA,IAAAA,CAAAA,UAAAA,GAAAA,KACAyB,GAAAA,IAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACA3C,oBAAAA,GAAAA,KAAoB,GAAAhB,IAAAA,CAEnB4D,YAAAA,GAAAA,KAAY,GAAA5D,IAAAA,CACZ6D,OAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,aAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,cAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAC,QAAAA,GAAAA,KAAQ,GAAAhE,IAAAA,CACRiE,YAAAA,GAAAA,KAAY,GAAAjE,IAAAA,CACZuD,eAAAA,GAAAA,KAAe,GAAAvD,IAAAA,CACfkE,sBAAAA,GAAAA,KAAsB,GAAAlE,IAAAA,CACtBmE,QAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,aAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,QAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAC,aAAAA,GAAAA,KAAa,GAAAtE,IAAAA,CAEbwD,wBAAAA,GAAAA,KAAwB,GAAAxD,IAAAA,CACxByD,0BAAAA,GAAAA,KAYJ,GAAAzD,IAAAA,CAAKa,GAAAA,GAAMA,GAEXb,IAAAA,CAAKsD,EAAAA,GAAKA,GAEVtD,IAAAA,CAAK0D,OAAAA,GAAUA,GAEf1D,IAAAA,CAAK2D,iBAAAA,GAAoBA,GAEzB3D,IAAAA,CAAKuD,eAAAA,GAAkBA,GAEvBvD,IAAAA,CAAKwD,wBAAAA,GAA2BA,GAChCxD,IAAAA,CAAKyD,0BAAAA,GAA6BA,GAGlCzD,IAAAA,CAAKkC,UAAAA,GAAa;YACdqC,aAA4CtB,QAAjCA,CAAAA,IAAEjD,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAqB,WAAA,AAAA,IAACvB,IArDnC;YAsDTwB,cAA8CvB,QAAlCA,CAAAA,IAAElD,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAsB,YAAA,AAAA,IAACtB,IAAI;YAClDwB,gBAAkDvB,QAApCA,CAAAA,IAAEnD,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAwB,cAAA,AAAA,IAACrB,IAAI;YACtDwB,sBACgD,QAA5C3E,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAA8B,oBAAA;YAC3CI,mBAA4D,QAAzC5E,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAA2B,iBAAA;YACvDK,qBAC2CzB,QADxBA,CAAAA,IACfpD,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAA6B,mBAAA,AAAA,IAACpB,IAAI;YAC/C0B,aACuC,QAAnC9E,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAqB,WAAA,GACxBO,WAAW/E,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAqB,WAAA,IACzC;YACVrC,cAAkD,QAApCnC,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAsB,YAAA;YAC7CQ,YAA0C,QAAhC3B,CAAAA,IAAErD,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAoB,UAAA,AAAA,IAACnB,IAAI;YAC9C4B,gBAAsD,QAAtCjF,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAwB,cAAA;YACjDU,kBAA0D,QAAxClF,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAA0B,gBAAA;YACrDW,wBACkD,QAA9CnF,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAgC,sBAAA;QAAA,GAIjDxE,IAAAA,CAAK4D,YAAAA,GAAe;YAChBwB,OAAO;YACPC,KAAK;QAAA,GAITrF,IAAAA,CAAK6D,OAAAA,GAAU;YACXyB,aAAa;YACbC,WAAW;YACXC,KAAK,CAAA;QAAA,GAITxF,IAAAA,CAAK8D,aAAAA,GAC0B,eAA3B9D,IAAAA,CAAK2D,iBAAAA,GACC8B,OAAOC,OAAAA,GACPD,OAAOE,OAAAA,EAGjB3F,IAAAA,CAAK+D,cAAAA,GAAiB,GAGtB/D,IAAAA,CAAKgE,QAAAA,GAAW,GAChBhE,IAAAA,CAAKiE,YAAAA,GAAe,MACpBjE,IAAAA,CAAKkE,sBAAAA,GAAyB,EAAA,EAG9BlE,IAAAA,CAAKmE,QAAAA,GAAAA,CAAW,GAChBnE,IAAAA,CAAKoE,aAAAA,GAAAA,CAAgB,GACrBpE,IAAAA,CAAKgB,oBAAAA,GAAAA,CAAuB,GAC5BhB,IAAAA,CAAKqE,QAAAA,GAAAA,CAAW,GAChBrE,IAAAA,CAAKsE,aAAAA,GAAAA,CAAgB,GAGrBtE,IAAAA,CAAKE,KAAAA;IACT;IAAC,IAAAC,IAAA6C,EAAA5C,SAAAA;IAgfA4C,OAhfA7C,EAOOD,KAAAA,GAAA;QACCF,IAAAA,CAAK0D,OAAAA,IAKN1D,CAAAA,IAAAA,CAAKuD,eAAAA,IAAmBvD,IAAAA,CAAKkC,UAAAA,CAAWyC,oBAAAA,IACxC3E,IAAAA,CAAK4F,0BAAAA,IAIT5F,IAAAA,CAAK6F,OAAAA,EAAAA;IACT,GAAC1F,EAKM2F,QAAAA,GAAA,SAAQC,CAAAA;QACX/F,IAAAA,CAAK8D,aAAAA,GADsBiC,EAAbjC,aAAAA,EAEd9D,IAAAA,CAAK6F,OAAAA;IACT,GAAC1F,EAKM6F,QAAAA,GAAA,SAAQC,CAAAA;QAAyD,IAAvCC,IAAMD,EAANC,MAAAA,EACvBC,IACyB,eAA3BnG,IAAAA,CAAK2D,iBAAAA,GACC8B,OAAOW,WAAAA,GACPX,OAAOY,UAAAA;QAKjB,IAJArG,IAAAA,CAAK8D,aAAAA,GALsBmC,EAAbnC,aAAAA,EAMd9D,IAAAA,CAAKsG,gBAAAA,IAIDtG,IAAAA,CAAKkC,UAAAA,CAAW4C,WAAAA,IAAAA,CACfyB,MAAMvG,IAAAA,CAAKkC,UAAAA,CAAW4C,WAAAA;YAGvB,IAAK9E,IAAAA,CAAKkC,UAAAA,CAAWiD,sBAAAA,IAA2Be,GAOzC;gBAEH,IAAIlG,IAAAA,CAAKqE,QAAAA,EAAU;oBACf,IAAML,IAAWlB,KAAK0D,GAAAA,CAAI,GAAGxG,IAAAA,CAAKgE,QAAAA;oBAClChE,IAAAA,CAAK+D,cAAAA,GACDC,IAAWmC,IAAQnG,IAAAA,CAAKkC,UAAAA,CAAW4C,WAAAA,GAAAA;gBAC3C,OAAO;oBACH,IAAMd,IAAW5B,EAAS,GAAG,GAAA,IAAO,GAAGpC,IAAAA,CAAKgE,QAAAA;oBAC5ChE,IAAAA,CAAK+D,cAAAA,GACDC,IAAWmC,IAAQnG,IAAAA,CAAKkC,UAAAA,CAAW4C,WAAAA,GAAAA;gBAC3C;gBAEA9E,IAAAA,CAAKa,GAAAA,CAAI4F,KAAAA,CAAMC,SAAAA,GACgB,eAA3B1G,IAAAA,CAAK2D,iBAAAA,GACmB,oBAAA3D,IAAAA,CAAK+D,cAAAA,GAAAA,WAAAA,iBACR/D,IAAAA,CAAK+D,cAAAA,GAAc;YAChD,OAtBQ/D,IAAAA,CAAK+D,cAAAA,IACL/D,CAAAA,IAAAA,CAAKa,GAAAA,CAAI4F,KAAAA,CAAMC,SAAAA,GACnB,sBAAA,GACA1G,IAAAA,CAAK+D,cAAAA,GAAiB;;IAqBlC,GAAC5D,EAKM4B,SAAAA,GAAA;QACH,IAAA,CAAI/B,IAAAA,CAAKmE,QAAAA,EAAT;YAIAnE,IAAAA,CAAKmE,QAAAA,GAAAA,CAAW,GAChBnE,IAAAA,CAAKa,GAAAA,CAAI8F,SAAAA,CAAUC,GAAAA,CAAI5G,IAAAA,CAAKkC,UAAAA,CAAWqC,WAAAA;YAEvC,IACMsC,IAAuB7G,IAAAA,CAAK8G,kBAAAA;YAClC9G,IAAAA,CAAKkC,UAAAA,CAAW8C,UAAAA,IAAchF,IAAAA,CAAK+G,aAAAA,CAFR,SAE2BF;QAPtD;IAQJ,GAAC1G,EAKM8B,YAAAA,GAAA;QACH,IAAMjC,IAAAA,CAAKmE,QAAAA,IAAYnE,IAAAA,CAAKkC,UAAAA,CAAWC,YAAAA,EAAvC;YAIAnC,IAAAA,CAAKmE,QAAAA,GAAAA,CAAW,GAChBnE,IAAAA,CAAKa,GAAAA,CAAI8F,SAAAA,CAAUK,MAAAA,CAAOhH,IAAAA,CAAKkC,UAAAA,CAAWqC,WAAAA;YAE1C,IACMsC,IAAuB7G,IAAAA,CAAK8G,kBAAAA;YAClC9G,IAAAA,CAAKkC,UAAAA,CAAW8C,UAAAA,IAAchF,IAAAA,CAAK+G,aAAAA,CAFR,SAE2BF;QAPtD;IAQJ,GAAC1G,EAMM2B,kBAAAA,GAAA;QACC9B,IAAAA,CAAKoE,aAAAA,IAITpE,CAAAA,IAAAA,CAAKoE,aAAAA,GAAAA,CAAgB,GACrBpE,IAAAA,CAAKwD,wBAAAA,CAAyBxD,IAAAA,CAAAA;IAClC,GAACG,EAMM6B,mBAAAA,GAAA;QACEhC,IAAAA,CAAKoE,aAAAA,IAIVpE,CAAAA,IAAAA,CAAKoE,aAAAA,GAAAA,CAAgB,GACrBpE,IAAAA,CAAKyD,0BAAAA,CAA2BzD,IAAAA,GAGX,QAArBA,IAAAA,CAAKiE,YAAAA,IACDjE,IAAAA,CAAKsG,gBAAAA,CAAiB7D,EAAc;YAAC;YAAG;SAAA,EAAIzC,IAAAA,CAAKiE,YAAAA,EAAAA;IACzD,GAAC9D,EAOO0F,OAAAA,GAAA;QACJ7F,IAAAA,CAAK6D,OAAAA,CAAQ2B,GAAAA,GAAMxF,IAAAA,CAAKa,GAAAA,CAAIoG,qBAAAA,IAC5BjH,IAAAA,CAAKkH,eAAAA,IACLlH,IAAAA,CAAKmH,oBAAAA,IAGDnH,IAAAA,CAAKsE,aAAAA,IACLtE,CAAAA,IAAAA,CAAKsE,aAAAA,GAAAA,CAAgB,GAEjBtE,IAAAA,CAAKqE,QAAAA,IACLrE,IAAAA,CAAK+B,SAAAA,EAAAA;IAGjB,GAAC5B,EAOO+G,eAAAA,GAAA;QACJ,IAAAE,IAAqCpH,IAAAA,CAAK6D,OAAAA,CAAQ2B,GAAAA,EAC5CW,IACyB,eAA3BnG,IAAAA,CAAK2D,iBAAAA,GACC8B,OAAOW,WAAAA,GACPX,OAAOY,UAAAA,EAEXgB,IACyB,eAA3BrH,IAAAA,CAAK2D,iBAAAA,GAPgByD,EAANE,MAAAA,GAAaF,EAALG,KAAAA;QAS3BvH,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GACTtF,IAAAA,CAAK8D,aAAAA,GALuC,CAAA,eAA3B9D,IAAAA,CAAK2D,iBAAAA,GALfyD,EAAHI,GAAAA,GAASJ,EAAJK,IAAAA,AAAAA,IAU2BzH,IAAAA,CAAK+D,cAAAA,EAC7C/D,IAAAA,CAAK6D,OAAAA,CAAQ0B,SAAAA,GAAYvF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAc+B,GAMhDrH,IAAAA,CAAKqE,QAAAA,GAHLrE,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAca,KAAAA,CAC1BnG,IAAAA,CAAKkC,UAAAA,CAAWgD,gBAMzB;IAAA,GAAC/E,EAOOgH,oBAAAA,GAAA;QAEJ,IAAMhB,IACyB,eAA3BnG,IAAAA,CAAK2D,iBAAAA,GACC8B,OAAOW,WAAAA,GACPX,OAAOY,UAAAA,EAGXgB,IACyB,eAA3BrH,IAAAA,CAAK2D,iBAAAA,GACC3D,IAAAA,CAAK6D,OAAAA,CAAQ2B,GAAAA,CAAI8B,MAAAA,GACjBtH,IAAAA,CAAK6D,OAAAA,CAAQ2B,GAAAA,CAAI+B,KAAAA,EAGrBG,IAAS1H,IAAAA,CAAKkC,UAAAA,CAAWuC,YAAAA,CAAakD,KAAAA,CAAM,MAC5CrC,IAA2BsC,QAAbF,CAAAA,CAAO,EAAA,GAAkBA,CAAAA,CAAO,EAAA,CAAGG,IAAAA,KAAS,KAC1DtC,IAAyBqC,QAAbF,CAAAA,CAAO,EAAA,GAAkBA,CAAAA,CAAO,EAAA,CAAGG,IAAAA,KAAS,KAGxDnD,IAAiB1E,IAAAA,CAAKkC,UAAAA,CAAWwC,cAAAA,CAAeiD,KAAAA,CAAM,MACxDG,IACqBF,QAArBlD,CAAAA,CAAe,EAAA,GAAkBA,CAAAA,CAAe,EAAA,CAAGmD,IAAAA,KAAS,SAC1DE,IACmBH,QAArBlD,CAAAA,CAAe,EAAA,GAAkBA,CAAAA,CAAe,EAAA,CAAGmD,IAAAA,KAAS,OAG1DG,IAAgB1C,EAAY2C,QAAAA,CAAS,OACrC9B,IAAQ+B,SAAS5C,EAAY6C,OAAAA,CAAQ,KAAK,IAAIN,IAAAA,MAAU,MACxDK,SAAS5C,IACT8C,IAAc7C,EAAU0C,QAAAA,CAAS,OACjC9B,IAAQ+B,SAAS3C,EAAU4C,OAAAA,CAAQ,KAAK,IAAIN,IAAAA,MAAU,MACtDK,SAAS3C;QAQf,OALIvF,IAAAA,CAAKqE,QAAAA,IACLyD,CAAAA,IAAsB,MAAA,GAIlBA;YACJ,KAAK;YAyBL;gBACI9H,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GACdpF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAca,IAAQ6B;gBACvC;YAvBJ,KAAK;gBACDhI,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GACdpF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GACba,IACA6B,IACc,KAAdX;gBACJ;YAEJ,KAAK;gBACDrH,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GACdpF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GACba,IACA6B,IACAX;gBACJ;YAEJ,KAAK;gBACDrH,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GAAQ;QAAA;QAUlC,OAAQ2C;YACJ,KAAK;gBACD/H,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GAAMrF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAc8C;gBACnD;YAEJ,KAAK;gBACDpI,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GACdrF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAc8C,IAA4B,KAAdf;gBAC7C;YAOJ;gBACIrH,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GACdrF,IAAAA,CAAK6D,OAAAA,CAAQyB,WAAAA,GAAc8C,IAAcf;QAAAA;QAKrD,IAAIrH,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,IAAOrF,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,EAC3C,OAAQ2C;YACJ,KAAK;YAcL;gBACI/H,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GAAMrF,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GAAQ;gBAClD;YAZJ,KAAK;gBACDpF,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GACdrF,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GAAsB,KAAdiC;gBAC9B;YAEJ,KAAK;gBACDrH,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,GACdrF,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,GAAQiC;QAAAA;IAQ9C,GAAClH,EAUOmG,gBAAAA,GAAA,SAAiB+B,CAAAA;QAErB,ID/bwC7G,GC+blCwC,IAAAA,QACFqE,IAAAA,IAAAA,ADhcoC7G,CAAAA,IAqCrCY,ECgaSpC,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,EAClBpF,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA,EDjaR,GAAG,GCkabrF,IAAAA,CAAK8D,aAAAA,CAAAA,IALT,IAAA,IDjcetC,ICkcf,IAAA,IDlcmCA;QC4c3C,IAFAxB,IAAAA,CAAKgE,QAAAA,GAAWA,GAEZA,KAAYhE,IAAAA,CAAKiE,YAAAA,EAAc;YAW/B,IAVAjE,IAAAA,CAAKiE,YAAAA,GAAeD,GAGpBhE,IAAAA,CAAKkC,UAAAA,CAAW0C,iBAAAA,IAAqB5E,IAAAA,CAAKsI,eAAAA,CAAgBtE,IAG1DhE,IAAAA,CAAKkC,UAAAA,CAAW2C,mBAAAA,IACZ7E,IAAAA,CAAKuI,uBAAAA,CAAwBvE,IAG7BhE,IAAAA,CAAKkC,UAAAA,CAAWyC,oBAAAA,EAChB,IAAAxD,IAAwDC,GAAxDD,IAAAE,EAA6BrB,IAAAA,CAAKkE,sBAAAA,GAAAA,CAAAA,AAAsB9C,CAAAA,IAAAD,GAAAA,EAAAG,IAAAA,EAAE;gBAAA,IAA/CkH,IAAcpH,EAAAI,KAAAA;gBACrBxB,IAAAA,CAAKuD,eAAAA,IACDvD,IAAAA,CAAKuD,eAAAA,CAAgBkF,IAAAA,CAncb,oBAqcJzE,GACAwE,EAAeE,UAAAA,EACfF,EAAeG,QAAAA;YAE3B;YAIJ3E,IAAW,KAAKA,IAAW,KAAKhE,IAAAA,CAAK+B,SAAAA,IACxB,MAAbiC,KAAkBhE,IAAAA,CAAKiC,YAAAA,IACV,MAAb+B,KAAkBhE,IAAAA,CAAKiC,YAAAA;QAC3B;IACJ,GAAC9B,EASDmI,eAAAA,GAAA,SAAgBM,CAAAA;QAAAA,KAAAA,MAAAA,KAAAA,CAAAA,IAAkB,CAAA,GAC9B5I,IAAAA,CAAKa,GAAAA,CAAI4F,KAAAA,CAAMoC,WAAAA,CA5dE,cA8dbD,EAAgBE,QAAAA;IAExB,GAAC3I,EASDoI,uBAAAA,GAAA,SAAwBK,CAAAA;QAAAA,KAAe,MAAfA,KAAAA,CAAAA,IAAkB,CAAA;QACtC,IAAMG,IAAkB/I,IAAAA,CAAKkC,UAAAA,CAAW2C,mBAAAA;QAExC,IAAKkE,GAAL;YAEA,IAAMC,IAAc,IAAIC,YAAYF,GAAiB;gBACjDG,QAAQ;oBACJpI,QAAQd,IAAAA,CAAKa,GAAAA;oBACbmD,UAAU4E;gBAAAA;YAAAA;YAGlBnD,OAAO0D,aAAAA,CAAcH;QARC;IAS1B,GAAC7I,EAODyF,0BAAAA,GAAA;QACI,IAAK5F,IAAAA,CAAKuD,eAAAA,EAAV;YAIA,IAAM6F,IAAiBC,OAAOC,IAAAA,CAAKtJ,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,EAAS+E,MAAAA,CAAO,SAACC,CAAAA;gBAAG,OAC5DA,EAAIvB,QAAAA,CAAS;YAAS,IAEpBwB,IAAiBJ,OAAO9I,OAAAA,CAAQP,IAAAA,CAAKuD,eAAAA,CAAgBkG,OAAAA;YAE3D,IAAKL,EAAeM,MAAAA,EAIpB,IAAAC,IAA0CC,GAA1CD,IAAAtI,EAA4B+H,IAAAA,CAAAA,AAAcQ,CAAAA,IAAAD,GAAAA,EAAArI,IAAAA,EAAE;gBAAjC,IACDqH,IAAW3I,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CADNoF,EAAApI,KAAAA,CAAAA;gBAGpB,IAAA,CAAKmH,GACD;gBAGJ,IAAA,IAA4BkB,GAA5BC,IAAAzI,EAAqBoI,IAAAA,CAAAA,AAAOI,CAAAA,IAAAC,GAAAA,EAAAxI,IAAAA,EAAE;oBAAnB,IAAAyI,IAAMF,EAAArI,KAAAA;oBAGTmH,KAF4BoB,CAAAA,CAEhC,EAAA,IACI/J,IAAAA,CAAKkE,sBAAAA,CAAuB8F,IAAAA,CAAK;wBAC7BtB,YAJwBqB,CAAAA,CAAbE,EAAAA;wBAKXtB,UAAAA;oBAAAA;gBAGZ;YACJ;QA5BA;IA6BJ,GAACxI,EAOD2G,kBAAAA,GAAA;QACI,IAAMoD,IAA2BzH,EAC7B;YAACzC,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA;YAAOpF,IAAAA,CAAK4D,YAAAA,CAAayB,GAAAA;SAAAA,EAC5CrF,IAAAA,CAAK8D,aAAAA;QAET,OAAO9D,IAAAA,CAAK4D,YAAAA,CAAawB,KAAAA,KAAU8E,IAC7B,UACA;IACV,GAAC/J,EAUD4G,aAAAA,GAAA,SAAcoD,CAAAA,EAAoBtD,CAAAA;QAAoB,IAAAuD,GAAAC,GAC5CC,IAA2C,QAA7BF,CAAAA,IAAGpK,IAAAA,CAAKkC,UAAAA,CAAW8C,UAAAA,AAAAA,IAAAA,KAAU,IAA1BoF,EAA4BzC,KAAAA,CAAM,MACnD4C,IAAWF,QAAHA,CAAAA,IAAGrK,IAAAA,CAAKkC,UAAAA,AAAAA,IAAAA,KAALmI,IAAAA,EAAiBpF,cAAAA;QAElC,IAAIqF,KAAkBA,EAAeZ,MAAAA,GAAS,GAAG;YAAAc,IAAAA,GAGzCC,GADGC,IAA8BJ,CAAAA,CAAc,EAAA,EAAtC5B,IAAwB4B,CAAAA,CAAZ3B,EAAAA,EAAAA,IAAY2B,CAAAA,CAAc,EAAA;YAK/CG,IADAF,IACiBvK,IAAAA,CAAKa,GAAAA,CAAI2D,OAAAA,CAAO,WAAUkE,EAAWb,IAAAA,GAAAA,GAErCc,GAGrB3I,IAAAA,CAAKuD,eAAAA,IACDvD,IAAAA,CAAKuD,eAAAA,CAAgBkF,IAAAA,CACjBiC,EAAK7C,IAAAA,IACL;gBACI/G,QAAQd,IAAAA,CAAKa,GAAAA;gBACbsJ,KAAAA;gBACAtD,MAAAA;YAAAA,GAEJ6B,EAAWb,IAAAA,IACX2C,QADiBA,CAAAA,IACjBC,CAAAA,IAAAA,KAAAD,IAAAA,EAAgB3C,IAAAA;QAE5B,OAAWyC,IAAAA,GAAgB;YAEvB,IACMtB,IAAc,IAAIC,YADEqB,CAAAA,CAAAA,EAAAA,EAC2B;gBACjDpB,QAAQ;oBACJpI,QAAQd,IAAAA,CAAKa,GAAAA;oBACbsJ,KAAAA;oBACAtD,MAAAA;gBAAAA;YAAAA;YAGRpB,OAAO0D,aAAAA,CAAcH;QACzB;IACJ,GAAChG;AAAA,KChnBC2H,IAA2B;IAC7B;IACA;IACA;IACA;IACA;IACA;CAAA,EAOiBC,IAAAA,WAAAA,GAAI;IAarB,SAAAA,EAAAjL,CAAAA;QAMc,IALVkB,IAAGlB,EAAHkB,GAAAA,EACA0C,IAAe5D,EAAf4D,eAAAA,EACAsH,IAAiBlL,EAAjBkL,iBAAAA,EACAC,IAAanL,EAAbmL,aAAAA,EACAnH,IAAiBhE,EAAjBgE,iBAAAA;QAAAA,IAAAA,CAjBIoH,gBAAAA,GAAAA,KAAgB,GAAA/K,IAAAA,CAChBuD,eAAAA,GAAAA,KAAe,GAAAvD,IAAAA,CACf6K,iBAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,aAAAA,GAAAA,KACAlL,GAAAA,IAAAA,CAAAA,cAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAoL,uBAAAA,GAAAA,KAAuB,GAAAhL,IAAAA,CACvBiL,iBAAAA,GAAAA,KAAiB,GAAAjL,IAAAA,CACjBkL,sBAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAC,aAAAA,GAAAA,KAAa,GAAApL,IAAAA,CACb2D,iBAAAA,GAAAA,KASJ,GAAK9C,IAMLb,CAAAA,IAAAA,CAAK+K,gBAAAA,GAAmBlK,GAGxBb,IAAAA,CAAKuD,eAAAA,GAAkBA,GAGvBvD,IAAAA,CAAK2D,iBAAAA,GAAoBA,GAGzB3D,IAAAA,CAAK6K,iBAAAA,GAAAA,QAAoBA,IAAAA,IAtCL,uBAuCpB7K,IAAAA,CAAK8K,aAAAA,GAA6B,QAAbA,IAAAA,IAtCL,uBAyChB9K,IAAAA,CAAKJ,cAAAA,GAAiB,EAAA,EACtBI,IAAAA,CAAKgL,uBAAAA,GAA0B,EAAA,EAC/BhL,IAAAA,CAAKiL,iBAAAA,GAAoB,EAAA,EACzBjL,IAAAA,CAAKkL,sBAAAA,GAAyB,EAAA,EAI9BlL,IAAAA,CAAKE,KAAAA,EAAAA,IAzBDmL,QAAQC,KAAAA,CAAM;IA0BtB;IAAC,IAAAnL,IAAAyK,EAAAxK,SAAAA;IA2SA,OA3SAD,EAOOD,KAAAA,GAAA;QACJ,IAAMqL,IACFvL,IAAAA,CAAK+K,gBAAAA,CAAiBS,gBAAAA,CAAiB,kBAErCC,IAAqBC,MAAM7E,IAAAA,CAAK0E;QACtCvL,IAAAA,CAAK2L,wBAAAA,CAAyBF,IAG9BzL,IAAAA,CAAKmL,iBAAAA,GAAoB,IAAIzL,EAAG;YAC5BE,gBAAcgM,EAAAA,CAAAA,MAAAA,CAAM5L,IAAAA,CAAKgL,uBAAAA;YACzBlL,YAAYE,IAAAA,CAAK6K,iBAAAA;YACjB9K,OAAAA,CAAO;QAAA,IAIXC,IAAAA,CAAKoL,aAAAA,GAAgB,IAAI1L,EAAG;YACxBE,gBAAcgM,EAAAA,CAAAA,MAAAA,CAAM5L,IAAAA,CAAKiL,iBAAAA;YACzBnL,YAAYE,IAAAA,CAAK8K,aAAAA;YACjB/K,OAAAA,CAAO;QAAA;IAEf,GAACI,EAKMsB,OAAAA,GAAA;QACHzB,IAAAA,CAAKmL,iBAAAA,CAAkB1J,OAAAA,IACvBzB,IAAAA,CAAKoL,aAAAA,CAAc3J,OAAAA,IACnBzB,IAAAA,CAAK6L,6BAAAA;IACT,GAAC1L,EAKD2F,QAAAA,GAAA,SAAQC,CAAAA;QACJ,IADO,IAC2C3E,GAD3C0C,IAAaiC,EAAbjC,aAAAA,EACP3C,IAAAE,EAA4BrB,IAAAA,CAAKiL,iBAAAA,GAAAA,CAAAA,AAAiB7J,CAAAA,IAAAD,GAAAA,EAAAG,IAAAA,EAA1BF,EAAAI,KAAAA,CACNsE,QAAAA,CAAS;YACnBhC,eAAAA;QAAAA;IAGZ,GAAC3D,EAKD6F,QAAAA,GAAA,SAAQC,CAAAA;QACJ,IADO,IACgD2D,GADhD9F,IAAamC,EAAbnC,aAAAA,EAAeoC,IAAMD,EAANC,MAAAA,EACtByD,IAAAtI,EAA4BrB,IAAAA,CAAKkL,sBAAAA,GAAAA,CAAAA,AAAsBtB,CAAAA,IAAAD,GAAAA,EAAArI,IAAAA,EAA/BsI,EAAApI,KAAAA,CACNwE,QAAAA,CAAS;YACnBlC,eAAAA;YACAoC,QAAAA;QAAAA;IAGZ,GAAC/F,EAOD2L,oBAAAA,GAAA,SAAqBC,CAAAA;QAA0B,IAAA1L,IAAAL,IAAAA,EACrCgM,IACFD,EAAcP,gBAAAA,CAAiB;QAEnC,IAAKQ,EAAwBtC,MAAAA,EAA7B;YAGA,IAAK,IAAIuC,IAAQ,GAAGA,IAAQjM,IAAAA,CAAKgL,uBAAAA,CAAwBtB,MAAAA,EAAQuC,IAAS;gBACtE,IAAMpK,IAAgB7B,IAAAA,CAAKgL,uBAAAA,CAAwBiB,EAAAA;gBAChBP,MAAM7E,IAAAA,CAAKmF,GACfE,OAAAA,CAAQrK,EAAchB,GAAAA,IAAAA,MACjDb,CAAAA,IAAAA,CAAKmL,iBAAAA,CAAkBvJ,SAAAA,CAAUC,EAAchB,GAAAA,GAC/Cb,IAAAA,CAAKgL,uBAAAA,CAAwBmB,MAAAA,CAAOF,GAAO,EAAA;YAEnD;YAEA,IAAK,IAAIA,IAAQ,GAAGA,IAAQjM,IAAAA,CAAKiL,iBAAAA,CAAkBvB,MAAAA,EAAQuC,IAAS;gBAChE,IAAMpK,IAAgB7B,IAAAA,CAAKiL,iBAAAA,CAAkBgB,EAAAA;gBACVP,MAAM7E,IAAAA,CAAKmF,GACfE,OAAAA,CAAQrK,EAAchB,GAAAA,IAAAA,MACjDb,CAAAA,IAAAA,CAAKoL,aAAAA,CAAcxJ,SAAAA,CAAUC,EAAchB,GAAAA,GAC3Cb,IAAAA,CAAKiL,iBAAAA,CAAkBkB,MAAAA,CAAOF,GAAO,EAAA;YAE7C;YAGAD,EAAwBxL,OAAAA,CAAQ,SAACmB,CAAAA;gBAC7B,IAAMyK,IACF/L,EAAK6K,sBAAAA,CAAuBvK,IAAAA,CACxB,SAACkB,CAAAA;oBAAa,OAAKA,EAAchB,GAAAA,KAAQc;gBAAc,IAEzD0K,IAAsBhM,EAAKT,cAAAA,CAAee,IAAAA,CAC5C,SAACkB,CAAAA;oBAAkB,OAAAA,EAAchB,GAAAA,KAAQc;gBAAc;gBAGvDyK,KACA/L,EAAKiM,yBAAAA,CAA0BF,IAE/BC,KACAhM,CAAAA,EAAKT,cAAAA,GAAiBS,EAAKT,cAAAA,CAAe2J,MAAAA,CACtC,SAACgD,CAAAA;oBAAAA,OACGA,EAAkBjJ,EAAAA,IAAM+I,EAAoB/I,EAAE;gBAAA,EAAA;YAG9D;QAxCqC;IAyCzC,GAACnD,EAODqM,iBAAAA,GAAA,SAAkBC,CAAAA;QAEd,IAAMlB,IAAkBkB,EAAcjB,gBAAAA,CAAiB,kBAGjDkB,IAAgB,EAAA;QACtB1M,IAAAA,CAAKJ,cAAAA,CAAeY,OAAAA,CAAQ,SAACqB,CAAAA;YACzB6K,EAAI1C,IAAAA,CAAKnI,EAAcyB,EAAAA;QAC3B;QACA,IACMqJ,IADQ7J,KAAK0D,GAAAA,CAAGoG,KAAAA,CAAR9J,MAAY4J,EAAGd,MAAAA,CAAE;YAAA;SAAA,KACL,GACpBH,IAAqBC,MAAM7E,IAAAA,CAAK0E;QACtCvL,IAAAA,CAAK2L,wBAAAA,CACDF,GACAkB,GAAAA,CACA;IAER,GAACxM,EAWDwL,wBAAAA,GAAA,SACIJ,CAAAA,EACAoB,CAAAA,EACAE,CAAAA;QAAAA,KAAAA,MADAF,KAAAA,CAAAA,IAAY,CAAA,GAAA,KACZE,MAAAA,KAAAA,CAAAA,IAAAA,CAAY,CAAA;QAGZ,IAAK,IAAIZ,IAAQ,GAAGA,IAAQV,EAAgB7B,MAAAA,EAAQuC,IAAS;YACzD,IAAMtK,IAAiB4J,CAAAA,CAAgBU,EAAAA,EACjCvI,IAAU1D,IAAAA,CAAK8M,eAAAA,CAAgBnL,IAE/BoL,IAAwB,IAAI/J,EAAc;gBAC5CnC,KAAKc;gBACL2B,IAAIqJ,IAAYV;gBAChBtI,mBAAmB3D,IAAAA,CAAK2D,iBAAAA;gBACxBJ,iBAAiBvD,IAAAA,CAAKuD,eAAAA;gBACtBC,0BACIxD,IAAAA,CAAKgN,uBAAAA,CAAwBC,IAAAA,CAAKjN,IAAAA;gBACtCyD,4BACIzD,IAAAA,CAAKsM,yBAAAA,CAA0BW,IAAAA,CAAKjN,IAAAA;gBACxC0D,SAAAA;YAAAA;YAIJ1D,IAAAA,CAAKJ,cAAAA,CAAeoK,IAAAA,CAAK+C,IAGrBrJ,IACA1D,CAAAA,IAAAA,CAAKiL,iBAAAA,CAAkBjB,IAAAA,CAAK+C,IAGxBF,KACA7M,CAAAA,IAAAA,CAAKoL,aAAAA,CAAcxL,cAAAA,CAAeoK,IAAAA,CAC9B+C,IAEJ/M,IAAAA,CAAKoL,aAAAA,CAAc7J,OAAAA,CAAQwL,EAAsBlM,GAAAA,CAAAA,CAAAA,IAGrDb,CAAAA,IAAAA,CAAKgL,uBAAAA,CAAwBhB,IAAAA,CAAK+C,IAG9BF,KACA7M,CAAAA,IAAAA,CAAKmL,iBAAAA,CAAkBvL,cAAAA,CAAeoK,IAAAA,CAClC+C,IAEJ/M,IAAAA,CAAKmL,iBAAAA,CAAkB5J,OAAAA,CAAQwL,EAAsBlM,GAAAA,CAAAA,CAAAA;QAGjE;IACJ,GAACV,EAOD0L,6BAAAA,GAAA;QACI7L,IAAAA,CAAKJ,cAAAA,GAAiB,EAAA,EACtBI,IAAAA,CAAKiL,iBAAAA,GAAoB,EAAA,EACzBjL,IAAAA,CAAKgL,uBAAAA,GAA0B,EAAA,EAC/BhL,IAAAA,CAAKkL,sBAAAA,GAAyB,EAClC;IAAA,GAAC/K,EAUD6M,uBAAAA,GAAA,SAAwBnL,CAAAA;QACpB7B,IAAAA,CAAKkL,sBAAAA,CAAuBlB,IAAAA,CAAKnI;IACrC,GAAC1B,EAUDmM,yBAAAA,GAAA,SAA0BzK,CAAAA;QACtB7B,IAAAA,CAAKkL,sBAAAA,GAAyBlL,IAAAA,CAAKkL,sBAAAA,CAAuB3B,MAAAA,CACtD,SAAC2D,CAAAA;YACG,OAAAA,EAAsB5J,EAAAA,IAAMzB,EAAcyB,EAAE;QAAA;IAExD,GAACnD,EAWD2M,eAAAA,GAAA,SAAgBnL,CAAAA;QACZ,IAAIwL,IAAAA,EAAAA,CAAqBvB,MAAAA,CAAOjB,IAG1ByC,IAAkB,SAACC,CAAAA;YACrBF,IAAwBA,EAAsB5D,MAAAA,CAC1C,SAAC+D,CAAAA;gBAAS,OAAKA,KAAaD;YAAiB;QAErD;QAGA,IAAI1L,EAAe6C,OAAAA,CAAQC,YAAAA,EAAc;YAKrC,IAAa,SAJC9C,EAAe6C,OAAAA,CAAQC,YAAAA,CAChCkD,KAAAA,CAAM,KACN4F,GAAAA,CAAI,SAACC,CAAAA;gBAAS,OAAAA,EAAKrF,OAAAA,CAAQ,KAAK,IAAIN,IAAAA;YAAM,GAC1C4F,IAAAA,CAAK,MAEN,OAAA,CACJ;YACIL,EAAgB;QAExB,OACIA,EAAgB;QAIpB,IAAIzL,EAAe6C,OAAAA,CAAQE,cAAAA,EAAgB;YAEvC,IAAa,gBADC/C,EAAe6C,OAAAA,CAAQE,cAAAA,CAAemD,IAAAA,IAEhD,OAAA,CACJ;YACIuF,EAAgB;QAExB,OACIA,EAAgB;QAIpB,IACIzL,EAAe6C,OAAAA,CAAQM,WAAAA,IAAAA,CACtByB,MAAMxB,WAAWpD,EAAe6C,OAAAA,CAAQM,WAAAA,IAEzC,OAAA,CAAO;QAEPsI,EAAgB;QAIpB,IAAA,IAA6CvD,GAA7CC,IAAAzI,EAAwB8L,IAAAA,CAAAA,AAAqBtD,CAAAA,IAAAC,GAAAA,EAAAxI,IAAAA,EACzC,IADgBuI,EAAArI,KAAAA,IACCG,EAAe6C,OAAAA,EAC5B,OAAA,CACJ;QAGJ,OAAA,CAAA;IACJ,GAACoG;AAAA,KCpWgB8C,IAAAA,WAAAA,GAMjB;IAAA,SAAAA,EAAA/N,CAAAA;QAAAA,IAAcgO,IAAchO,EAAdgO,cAAAA,EAAcC,IAAAjO,EAAEkO,cAAAA,EAAAA,IAAAA,KAAAA,MAAcD,IAAG,YAAA,IAAQA;QAAAA,IAAAA,CAL/CE,eAAAA,GAAAA,KAAe,GAAA9N,IAAAA,CACf+N,cAAAA,GAAAA,KACA9N,GAAAA,IAAAA,CAAAA,QAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACA4N,cAAAA,GAAAA,KAAc,GAIlB7N,IAAAA,CAAK8N,eAAAA,GAAkBH,GACvB3N,IAAAA,CAAK6N,cAAAA,GAAiBA,GAGtB7N,IAAAA,CAAK+N,cAAAA,GAAAA,CAAiB,GAGtB/N,IAAAA,CAAKE,KAAAA;IACT;IAAC,IAAAC,IAAAuN,EAAAtN,SAAAA;IA4BA,OA5BAD,EAOOD,KAAAA,GAAA;QAAKG,IAAAA,IAAAA,IAAAA;QAQTL,IAAAA,CAAKC,QAAAA,GAAW,IAAI+N,eANH,SAACzN,CAAAA;YAAAA,CACbF,EAAK0N,cAAAA,IAAAA,CAAAA,QAAkB1N,EAAKwN,cAAAA,IAALxN,EAAKwN,cAAAA,EAAAA,GAC7BxN,EAAK0N,cAAAA,GAAAA,CAAiB;QAC1B;QAMA,IAAA,IAAiD3M,GAAjDD,IAAAE,EAA6BrB,IAAAA,CAAK8N,eAAAA,GAAAA,CAAAA,AAAe1M,CAAAA,IAAAD,GAAAA,EAAAG,IAAAA,EAC7CtB,IAAAA,CAAKC,QAAAA,CAASsB,OAAAA,CADOH,EAAAI,KAAAA;IAG7B,GAACrB,EAKMsB,OAAAA,GAAA;QACHzB,IAAAA,CAAKC,QAAAA,CAASyB,UAAAA;IAClB,GAACgM;AAAA,KCrCgBO,IAAAA,WAAAA,GAqBjB;IAAA,SAAAA,EAAAC,CAAAA;QAAAA,IAUgCvO,IAAAA,KAAF,MAAEuO,IAAF,CAAA,IAAEA,GAAAC,IAAAxO,EAT5ByO,YAAAA,EAAAA,IAAAA,KAAY,MAAAD,IAAG,CAAA,IAAEA,GACjB5K,IAAe5D,EAAf4D,eAAAA,EACAsH,IAAiBlL,EAAjBkL,iBAAAA,EACAC,IAAanL,EAAbmL,aAAAA,EAAauD,IAAA1O,EACb2O,UAAAA,EAAAA,IAAAA,KAAa,MAAHD,KAAOA,GAAAE,IAAA5O,EACjB6O,SAAAA,EAAAA,IAAAA,KAAY,MAAHD,KAAOA,GAAAE,IAAA9O,EAChB+O,cAAAA,EAAAA,IAAAA,KAAiB,MAAHD,IAAG,YAAQ,IAAAA,GACzBE,IAAgBhP,EAAhBgP,gBAAAA,EACAC,IAAmBjP,EAAnBiP,mBAAAA;QAAmB5O,IAAAA,CA7BhB6O,UAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,aAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CAECC,YAAAA,GAAAA,KAAY,GAAA/O,IAAAA,CAEZoO,YAAAA,GAAAA,KACA7K,GAAAA,IAAAA,CAAAA,eAAAA,GAAAA,KACAsH,GAAAA,IAAAA,CAAAA,iBAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAC,aAAAA,GAAAA,KAAa,GAAA9K,IAAAA,CACbgP,WAAAA,GAAAA,KACAV,GAAAA,IAAAA,CAAAA,UAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAE,SAAAA,GAAAA,KAAS,GAAAxO,IAAAA,CACTiP,UAAAA,GAAAA,KAAU,GAAAjP,IAAAA,CAEV2O,gBAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,mBAAAA,GAAAA,KAAAA,GAAAA,IAAAA,CACAM,aAAAA,GAAAA,KAAa,GAAAlP,IAAAA,CACbmP,aAAAA,GAAAA,KACAC,GAAAA,IAAAA,CAAAA,eAAAA,GAAAA,KAcJ;QAAA,IAAA,IAAAC,IAAAC,GAAAA,IAAoBjG,OAAO9I,OAAAA,CAAQ6N,IAAaiB,IAAAC,EAAA5F,MAAAA,EAAA2F,IAAE;YAA7C,IAAO7F,IAAP8F,CAAAA,CAAAD,EAAAA,CACD,EAAA;YAAI;gBAAC;gBAAW;gBAAW;aAAA,CAAYpH,QAAAA,CAASuB,MAC5C6B,QAAQkE,IAAAA,CAAsB/F,mBAAAA,IAAAA;QAEtC;QAGAH,OAAOmG,MAAAA,CAAOxP,IAAAA,EAAM;YAChBoO,cAAAA;YACA7K,iBAAAA;YACAsH,mBAAAA;YACAC,eAAAA;YACAwD,YAAAA;YACAE,WAAAA;YACAE,gBAAAA;YACAC,kBAAAA;YACAC,qBAAAA;QAAAA,IAKJ5O,IAAAA,CAAKkP,aAAAA,GAAgBlP,IAAAA,CAAKyP,SAAAA,CAAUxC,IAAAA,CAAKjN,IAAAA,GACzCA,IAAAA,CAAKoP,eAAAA,GAAkBpP,IAAAA,CAAK0P,WAAAA,CAAYzC,IAAAA,CAAKjN,IAAAA,GAC7CA,IAAAA,CAAKmP,aAAAA,GAAgBnP,IAAAA,CAAK2P,SAAAA,CAAU1C,IAAAA,CAAKjN,IAAAA,GAGzCA,IAAAA,CAAK6O,UAAAA,GAAAA,CAAa,GAGlB7O,IAAAA,CAAKE,KAAAA;IACT;IAAC,IAAAC,IAAA8N,EAAA7N,SAAAA;IA2RA,OA3RAD,EAOOD,KAAAA,GAAA;QAAK,IAAA0P,GAAAvP,IAETL,IAAAA;QAAAA,IAAAA,CAAK8O,aAAAA,GAAgB,IAAIe,CAAAA,GAAAA,qBAAAA,AAAAA,EAAKC,EAAAA,CAAAA,GACvB9P,IAAAA,CAAKoO,YAAAA,EACR2B;YAAAA,SAAStK;YACTuK,SAASC,SAASC,eAAAA;YAClBC,UAAAA,CAAU;QAAA,KAAA,QAEdP,CAAAA,IAAAA,IAAAA,CAAKd,aAAAA,AAAAA,KAALc,EAAoBQ,EAAAA,CAAG,UAAUpQ,IAAAA,CAAK0O,cAAAA,GAGtCuB,SAASC,eAAAA,CAAgBG,YAAAA,CACrB,2BACArQ,IAAAA,CAAK8O,aAAAA,CAAcwB,OAAAA,CAAQC,WAAAA,GAG/BC,sBAAsB;YAElBnQ,EAAK0O,YAAAA,GAAe,IAAInE,EAAK;gBACzB/J,KAAKR,EAAKyO,aAAAA,CAAc2B,WAAAA;gBACxBlN,iBAAiBlD,EAAKkD,eAAAA;gBACtBsH,mBAAmBxK,EAAKwK,iBAAAA;gBACxBC,eAAezK,EAAKyK,aAAAA;gBACpBnH,mBAAmBtD,EAAKyO,aAAAA,CAAcwB,OAAAA,CAAQC,WAAAA;YAAAA,IAIlDlQ,EAAKqQ,WAAAA,IAGDrQ,EAAKsO,gBAAAA,IAAAA,CAAqBtO,EAAKuO,mBAAAA,GAC/BvD,QAAQkE,IAAAA,CACJ,0HAAA,CAEIlP,EAAKsO,gBAAAA,IAAoBtO,EAAKuO,mBAAAA,IACtCvD,QAAQkE,IAAAA,CACJ,yHAKRlP,EAAKmO,SAAAA,IAAanO,EAAK+E,KAAAA;QAC3B;IACJ,GAACjF,EAKMsB,OAAAA,GAAA;QAAOkP,IAAAA,GAAAC,IAAA5Q,IAAAA;QAEVA,IAAAA,CAAK6Q,IAAAA,IAEL7Q,IAAAA,CAAK8Q,aAAAA,IAEL9Q,IAAAA,CAAK8O,aAAAA,CAAcrN,OAAAA,IAEF,QAAjBkP,CAAAA,IAAA3Q,IAAAA,CAAK+O,YAAAA,AAAAA,KAAL4B,EAAmBlP,OAAAA,IAGnB+O,sBAAsB;YAAKO,IAAAA;YACN,QAAjBA,CAAAA,IAAAH,EAAK7B,YAAAA,AAAAA,KAALgC,EAAmBtP,OAAAA;QACvB;IACJ,GAACtB,EAKOuQ,WAAAA,GAAA;QACJ1Q,IAAAA,CAAKgR,mBAAAA,IAEDhR,IAAAA,CAAKsO,UAAAA,IACD,CAAA,oBAAoB7I,SACpBzF,IAAAA,CAAKiP,UAAAA,GAAa,IAAIvB,EAAG;YACrBC,gBAAgB;gBAACsC,SAASgB,IAAAA;aAAAA;YAC1BpD,gBAAgB7N,IAAAA,CAAKmP,aAAAA;QAAAA,KAGxB1J,OAAeyL,gBAAAA,CAAiB,UAAUlR,IAAAA,CAAKmP,aAAAA,CAAAA;IAG5D,GAAChP,EAKO2Q,aAAAA,GAAA;QACJ9Q,IAAAA,CAAKmR,qBAAAA,IAEDnR,IAAAA,CAAKsO,UAAAA,IACD,CAAA,oBAAoB7I,SACpBzF,IAAAA,CAAKiP,UAAAA,IAAcjP,IAAAA,CAAKiP,UAAAA,CAAWxN,OAAAA,KAElCgE,OAAe2L,mBAAAA,CACZ,UACApR,IAAAA,CAAKmP,aAAAA,CAAAA;IAIrB,GAAChP,EAKO6Q,mBAAAA,GAAA,SAAoBK,CAAAA;QAAAA,IAAwBC,IAAAtR,IAAAA,EAC1CuR,IAAiBF,KAEjBrR,IAAAA,CAAK8O,aAAAA,CAAc2B,WAAAA,EACnBe,IACY,QAAdD,IAAAA,KAAc,IAAdA,EAAgB/F,gBAAAA,CAAiB;QAErCgG,CAAAA,QAAAA,IAAAA,KAAAA,IAAAA,EAAmB9H,MAAAA,AAAAA,KACf8H,EAAkBhR,OAAAA,CAAQ,SAACK,CAAAA;YACvBA,EAAIqQ,gBAAAA,CAAiB,SAASI,EAAKlC,eAAAA,EAAAA,CAAiB;QACxD;IACR,GAACjP,EAKOgR,qBAAAA,GAAA,SAAsBE,CAAAA;QAAwB,IAAAI,IAClDzR,IAAAA,EAAMuR,IAAiBF,KAEjBrR,IAAAA,CAAK8O,aAAAA,CAAc2B,WAAAA,EACnBe,IACY,QAAdD,IAAAA,KAAc,IAAdA,EAAgB/F,gBAAAA,CAAiB;QAAA,CAAA,QACrCgG,IAAAA,KAAAA,IAAAA,EAAmB9H,MAAAA,AAAAA,KACf8H,EAAkBhR,OAAAA,CAAQ,SAACK,CAAAA;YACvBA,EAAIuQ,mBAAAA,CAAoB,SAASK,EAAKrC,eAAAA,EAAAA,CAAiB;QAC3D;IACR,GAACjP,EAKOwP,SAAAA,GAAA;QAAS+B,IAAAA,IAAAA,IAAAA;QAEblB,sBAAsB;YAAKmB,IAAAA;YACN,QAAjBA,CAAAA,IAAAD,EAAK3C,YAAAA,AAAAA,KAAL4C,EAAmB7L,QAAAA,CAAS;gBACxBhC,eAAe4N,EAAK5C,aAAAA,CAAc8C,MAAAA;YAAAA;QAE1C;IACJ,GAACzR,EAKOsP,SAAAA,GAAA;QAASoC,IAAAA,GAAAC;QACK,QAAlBD,CAAAA,IAAA7R,IAAAA,CAAK8O,aAAAA,AAAAA,KAAL+C,EAAoBE,GAAAA,CAAIC,KAAKC,GAAAA,KAEZ,QAAjBH,CAAAA,IAAA9R,IAAAA,CAAK+O,YAAAA,AAAAA,KAAL+C,EAAmB9L,QAAAA,CAAS;YACxBlC,eAAe9D,IAAAA,CAAK8O,aAAAA,CAAc8C,MAAAA;YAClC1L,QAAQlG,IAAAA,CAAK8O,aAAAA,CAAcwB,OAAAA,CAAQ4B,WAAAA;QAAAA;IAE3C,GAAC/R,EAKOuP,WAAAA,GAAA,SAAYyC,CAAAA;QAAiB,IAAAC;QACjCD,EAAME,cAAAA;QACN,IAAMC,IAAAA,QAAOF,CAAAA,IAAID,EAAMI,aAAAA,AAAAA,IAA6BH,IAAI;QACxD,IAAKE,GAAL;YACA,IAAMxR,IACFwR,EAAQE,YAAAA,CAAa,0BACrBF,EAAQE,YAAAA,CAAa,SACnB9K,IAAS4K,EAAQE,YAAAA,CAAa,4BAA4B,GAC1DC,IACFH,EAAQE,YAAAA,CAAa,8BACrBxS,IAAAA,CAAK8O,aAAAA,CAAcwB,OAAAA,CAAQmC,QAAAA;YAC/B3R,KACId,IAAAA,CAAK0S,QAAAA,CAAS5R,GAAQ;gBAClB4G,QAA0B,YAAA,OAAXA,IAAsBQ,SAASR,KAAUA;gBACxD+K,UACwB,YAAA,OAAbA,IACDvK,SAASuK,KACTA;YAAAA;QAdJ;IAgBlB,GAACtS,EAKMiF,KAAAA,GAAA;QAAA,IAAKuN;QACJ3S,IAAAA,CAAK6O,UAAAA,IAKS,CAAA,QAAlB8D,CAAAA,IAAA3S,IAAAA,CAAK8O,aAAAA,AAAAA,KAAL6D,EAAoBvN,KAAAA,IAEpBpF,IAAAA,CAAK6O,UAAAA,GAAAA,CAAa,GAClB7O,IAAAA,CAAK2O,gBAAAA,GACC3O,IAAAA,CAAK2O,gBAAAA,CAAiB3O,IAAAA,CAAKkP,aAAAA,IAC3BlP,IAAAA,CAAK4S,IAAAA,EAAAA;IACf,GAACzS,EAKM0Q,IAAAA,GAAA;QAAIgC,IAAAA;QACF7S,IAAAA,CAAK6O,UAAAA,IAKQ,CAAA,QAAlBgE,CAAAA,IAAI7S,IAAAA,CAAC8O,aAAAA,AAAAA,KAAL+D,EAAoBhC,IAAAA,IAEpB7Q,IAAAA,CAAK6O,UAAAA,GAAAA,CAAa,GAClB7O,IAAAA,CAAK4O,mBAAAA,GACC5O,IAAAA,CAAK4O,mBAAAA,CAAoB5O,IAAAA,CAAKkP,aAAAA,IAC9BlP,IAAAA,CAAKgP,WAAAA,IAAe8D,qBAAqB9S,IAAAA,CAAKgP,WAAAA,CAAAA;IACxD,GAAC7O,EAKM2L,oBAAAA,GAAA,SAAqBC,CAAAA;QAA0BgH,IAAAA;QAC7ChH,IAKL/L,CAAAA,IAAAA,CAAKmR,qBAAAA,CAAsBpF,IAC3BgH,QAAAA,CAAAA,IAAI/S,IAAAA,CAAC+O,YAAAA,AAAAA,KAALgE,EAAmBjH,oBAAAA,CAAqBC,EAAAA,IALpCV,QAAQC,KAAAA,CAAM;IAMtB,GAACnL,EAKMqM,iBAAAA,GAAA,SAAkBC,CAAAA;QAAAA,IAA0BuG,GAAAC,IAC/CjT,IAAAA;QAAKyM,IAKLuG,CAAAA,QAAAA,CAAAA,IAAIhT,IAAAA,CAAC+O,YAAAA,AAAAA,KAALiE,EAAmBxG,iBAAAA,CAAkBC,IACrC+D,sBAAsB;YAClByC,EAAKjC,mBAAAA,CAAoBvE;QAC7B,EAAA,IAPIpB,QAAQC,KAAAA,CAAM;IAQtB,GAACnL,EAKM+S,MAAAA,GAAA;QACHlT,IAAAA,CAAKmP,aAAAA;IACT,GAAChP,EAKMuS,QAAAA,GAAA,SACH5R,CAAAA,EACAwP,CAAAA;QAA+B,IAAA6C;QAEb,QAAlBA,CAAAA,IAAAnT,IAAAA,CAAK8O,aAAAA,AAAAA,KAALqE,EAAoBT,QAAAA,CAAS5R,GAAQ;YACjC4G,QAAe,QAAP4I,IAAAA,KAAO,IAAPA,EAAS5I,MAAAA;YACjB0L,MAAM9C,QAAAA,IAAAA,KAAAA,IAAAA,EAAS8C,IAAAA;YACfX,UAAUnC,QAAAA,IAAAA,KAAAA,IAAAA,EAASmC,QAAAA;YACnBY,WAAAA,QAAW/C,IAAAA,KAAAA,IAAAA,EAAS+C,SAAAA;YACpBC,MAAAA,QAAMhD,IAAAA,KAAAA,IAAAA,EAASgD,IAAAA;YACfC,OAAAA,QAAOjD,IAAAA,KAAAA,IAAAA,EAASiD,KAAAA;YAChBC,QAAe,QAAPlD,IAAAA,KAAO,IAAPA,EAASkD,MAAAA;YACjBC,YAAYnD,QAAAA,IAAAA,KAAAA,IAAAA,EAASmD,UAAAA;QAAAA;IAE7B,GAACtT,EAQOyS,IAAAA,GAAA;QAAIc,IAAAA,IAAAA,IAAAA;QACR1T,IAAAA,CAAKkP,aAAAA,IACLlP,IAAAA,CAAKgP,WAAAA,GAAcwB,sBAAsB;YAAA,OAAMkD,EAAKd,IAAAA;QAAM;IAC9D,GAAC3E;AAAA;;;;;AEjXE,6CAAA;AAAA,SAAS0F,MAAMC,CAAAA,EAAKC,CAAAA,EAAOrN,CAAAA;IAChC,OAAO1D,KAAK0D,GAAAA,CAAIoN,GAAK9Q,KAAK8Q,GAAAA,CAAIC,GAAOrN;AACvC;AAAA,MCAasN;IAAb,aAAAC;QACE/T,IAAAA,CAASgU,SAAAA,GAAAA,CAAY,GACrBhU,IAAAA,CAAKwB,KAAAA,GAAW,GAChBxB,IAAAA,CAAI6G,IAAAA,GAAW,GACf7G,IAAAA,CAAEiU,EAAAA,GAAW,GAEbjU,IAAAA,CAAQyS,QAAAA,GAAY,GAEpBzS,IAAAA,CAAWkU,WAAAA,GAAW;IAuEvB;IAnEC,QAAQE,CAAAA,EAAAA;QAAAA,IAAAA;QACN,IAAA,CAAKpU,IAAAA,CAAKgU,SAAAA,EAAW;QAErB,IAAIK,IAAAA,CAAY;QAEhB,IAAIrU,IAAAA,CAAKyS,QAAAA,IAAYzS,IAAAA,CAAKwT,MAAAA,EAAQ;YAChCxT,IAAAA,CAAKkU,WAAAA,IAAeE;YACpB,MAAME,IAAiBX,MAAM,GAAG3T,IAAAA,CAAKkU,WAAAA,GAAclU,IAAAA,CAAKyS,QAAAA,EAAU;YAElE4B,IAAYC,KAAkB;YAC9B,MAAMC,IAAgBF,IAAY,IAAIrU,IAAAA,CAAKwT,MAAAA,CAAOc;YAClDtU,IAAAA,CAAKwB,KAAAA,GAAQxB,IAAAA,CAAK6G,IAAAA,GAAAA,AAAQ7G,CAAAA,IAAAA,CAAKiU,EAAAA,GAAKjU,IAAAA,CAAK6G,IAAAA,AAAAA,IAAQ0N;QAClD,OAAUvU,IAAAA,CAAKoT,IAAAA,GACdpT,CAAAA,IAAAA,CAAKwB,KAAAA,GDZJ,SAASgT,KAAKC,CAAAA,EAAGC,CAAAA,EAAGC,CAAAA,EAAQC,CAAAA;YACjC,OANK,SAASxB,KAAKqB,CAAAA,EAAGC,CAAAA,EAAGG,CAAAA;gBACzB,OAAA,AAAQ,CAAA,IAAIA,CAAAA,IAAKJ,IAAII,IAAIH;YAC3B,EAIcD,GAAGC,GAAG,IAAI5R,KAAKgS,GAAAA,CAAAA,CAAKH,IAASC;QAC3C,ECUwB5U,IAAAA,CAAKwB,KAAAA,EAAOxB,IAAAA,CAAKiU,EAAAA,EAAgB,KAAZjU,IAAAA,CAAKoT,IAAAA,EAAWgB,IACnDtR,KAAKiS,KAAAA,CAAM/U,IAAAA,CAAKwB,KAAAA,MAAWxB,IAAAA,CAAKiU,EAAAA,IAClCjU,CAAAA,IAAAA,CAAKwB,KAAAA,GAAQxB,IAAAA,CAAKiU,EAAAA,EAClBI,IAAAA,CAAY,CAAA,CAAA,IAIdrU,CAAAA,IAAAA,CAAKwB,KAAAA,GAAQxB,IAAAA,CAAKiU,EAAAA,EAClBI,IAAAA,CAAY,CAAA;QAGVA,KACFrU,IAAAA,CAAK6Q,IAAAA,IAIS,SAAhBmE,CAAAA,IAAAhV,IAAAA,CAAKiV,QAAAA,AAAAA,KAAAA,KAAW,MAAAD,KAAAA,EAAAvM,IAAAA,CAAAzI,IAAAA,EAAAA,IAAAA,CAAKwB,KAAAA,EAAO6S;IAC7B;IAGD,OAAAxD;QACE7Q,IAAAA,CAAKgU,SAAAA,GAAAA,CAAY;IAClB;IAID,OACEnN,CAAAA,EACAoN,CAAAA,EAAAA,EACAb,MACEA,CAAAA,EAAIX,UACJA,CAAAA,EAAQe,QACRA,CAAAA,EAAM2B,SACNA,CAAAA,EAAOF,UACPA,CAAAA,EAAAA,EAAAA;QASFjV,IAAAA,CAAK6G,IAAAA,GAAO7G,IAAAA,CAAKwB,KAAAA,GAAQqF,GACzB7G,IAAAA,CAAKiU,EAAAA,GAAKA,GACVjU,IAAAA,CAAKoT,IAAAA,GAAOA,GACZpT,IAAAA,CAAKyS,QAAAA,GAAWA,GAChBzS,IAAAA,CAAKwT,MAAAA,GAASA,GACdxT,IAAAA,CAAKkU,WAAAA,GAAc,GACnBlU,IAAAA,CAAKgU,SAAAA,GAAAA,CAAY,GAEjBmB,QAAAA,KAAAA,KACAnV,IAAAA,CAAKiV,QAAAA,GAAWA;IACjB;AAAA;AAAA,MCxEUG;IAYX,YAAArB,EAAYhE,SACVA,CAAAA,EAAOC,SACPA,CAAAA,EAAO1B,YACPA,IAAAA,CAAa,CAAA,EACb+G,UAAUC,IAAgB,GAAA,EAAA,GACL,CAAA,CAAA,CAAA;QAdvBtV,IAAAA,CAAKuH,KAAAA,GAAW,GAChBvH,IAAAA,CAAMsH,MAAAA,GAAW,GACjBtH,IAAAA,CAAWuV,WAAAA,GAAW,GACtBvV,IAAAA,CAAYwV,YAAAA,GAAW,GAkDvBxV,IAAAA,CAAMkT,MAAAA,GAAG;YACPlT,IAAAA,CAAKyV,eAAAA,IACLzV,IAAAA,CAAK0V,eAAAA;QAAiB,GAGxB1V,IAAAA,CAAeyV,eAAAA,GAAG;YACZzV,IAAAA,CAAK+P,OAAAA,KAAYtK,SACnBzF,CAAAA,IAAAA,CAAKuH,KAAAA,GAAQ9B,OAAOY,UAAAA,EACpBrG,IAAAA,CAAKsH,MAAAA,GAAS7B,OAAOW,WAAAA,AAAAA,IACZpG,IAAAA,CAAK+P,OAAAA,YAAmB4F,eACjC3V,CAAAA,IAAAA,CAAKuH,KAAAA,GAAQvH,IAAAA,CAAK+P,OAAAA,CAAQ6F,WAAAA,EAC1B5V,IAAAA,CAAKsH,MAAAA,GAAStH,IAAAA,CAAK+P,OAAAA,CAAQ8F,YAAAA,AAAAA;QAC5B,GAGH7V,IAAAA,CAAe0V,eAAAA,GAAG;YACZ1V,IAAAA,CAAK+P,OAAAA,KAAYtK,SACnBzF,CAAAA,IAAAA,CAAKwV,YAAAA,GAAexV,IAAAA,CAAKgQ,OAAAA,CAAQwF,YAAAA,EACjCxV,IAAAA,CAAKuV,WAAAA,GAAcvV,IAAAA,CAAKgQ,OAAAA,CAAQuF,WAAAA,AAAAA,IACvBvV,IAAAA,CAAK+P,OAAAA,YAAmB4F,eACjC3V,CAAAA,IAAAA,CAAKwV,YAAAA,GAAexV,IAAAA,CAAK+P,OAAAA,CAAQyF,YAAAA,EACjCxV,IAAAA,CAAKuV,WAAAA,GAAcvV,IAAAA,CAAK+P,OAAAA,CAAQwF,WAAAA,AAAAA;QACjC,GA5DDvV,IAAAA,CAAK+P,OAAAA,GAAUA,GACf/P,IAAAA,CAAKgQ,OAAAA,GAAUA,GAEX1B,KACFtO,CAAAA,IAAAA,CAAK8V,eAAAA,GC/BJ,SAAST,SAASU,CAAAA,EAAUC,CAAAA;YACjC,IAAIC;YACJ,OAAO;gBACL,IAAIC,IAAOC,WACPC,IAAUpW,IAAAA;gBACdqW,aAAaJ,IACbA,IAAQK,WAAW;oBACjBP,EAASnJ,KAAAA,CAAMwJ,GAASF;gBACzB,GAAEF;YACJ;QACH,EDqBsChW,IAAAA,CAAKkT,MAAAA,EAAQoC,IAEzCtV,IAAAA,CAAK+P,OAAAA,KAAYtK,SACnBA,OAAOyL,gBAAAA,CACL,UACAlR,IAAAA,CAAK8V,eAAAA,EAAAA,CACL,KAGF9V,CAAAA,IAAAA,CAAKuW,qBAAAA,GAAwB,IAAIvI,eAC/BhO,IAAAA,CAAK8V,eAAAA,GAEP9V,IAAAA,CAAKuW,qBAAAA,CAAsBhV,OAAAA,CAAQvB,IAAAA,CAAK+P,OAAAA,CAAAA,GAG1C/P,IAAAA,CAAKwW,qBAAAA,GAAwB,IAAIxI,eAC/BhO,IAAAA,CAAK8V,eAAAA,GAEP9V,IAAAA,CAAKwW,qBAAAA,CAAsBjV,OAAAA,CAAQvB,IAAAA,CAAKgQ,OAAAA,CAAAA,GAG1ChQ,IAAAA,CAAKkT,MAAAA;IACN;IAED,UAAAzR;QAAAA,IAAAA,GAAAA;QAC8B,SAA5BuT,CAAAA,IAAAhV,IAAAA,CAAKuW,qBAAAA,AAAAA,KAAAA,KAAuB,MAAAvB,KAAAA,EAAAtT,UAAAA,IACA,SAA5B+U,CAAAA,IAAAzW,IAAAA,CAAKwW,qBAAAA,AAAAA,KAAAA,KAAuB,MAAAC,KAAAA,EAAA/U,UAAAA,IAC5B+D,OAAO2L,mBAAAA,CACL,UACApR,IAAAA,CAAK8V,eAAAA,EAAAA,CACL;IAEH;IA2BD,IAAA,QAAIY;QAIF,OAAO;YACLjC,GAAGzU,IAAAA,CAAKuV,WAAAA,GAAcvV,IAAAA,CAAKuH,KAAAA;YAC3BmN,GAAG1U,IAAAA,CAAKwV,YAAAA,GAAexV,IAAAA,CAAKsH,MAAAA;QAAAA;IAE/B;AAAA;AAAA,MElGUqP;IAGX,aAAA5C;QACE/T,IAAAA,CAAK4W,MAAAA,GAAS,CAAA;IACf;IAED,KAAKzE,CAAAA,EAAAA,GAAkB+D,CAAAA,EAAAA;QACrB,IAAIY,IAAY9W,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,IAAU,EAAA;QACtC,IAAK,IAAI4E,IAAI,GAAGrN,IAASoN,EAAUpN,MAAAA,EAAQqN,IAAIrN,GAAQqN,IACrDD,CAAAA,CAAUC,EAAAA,IAAMb;IAEnB;IAED,GAAG/D,CAAAA,EAAe4D,CAAAA,EAAAA;QAAAA,IAAAA;QAKhB,OAAA,AAHkB,CAAA,SAAlBf,CAAAA,IAAAhV,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,AAAAA,KAAAA,KAAM,MAAA6C,IAAAA,KAAA,IAAAA,EAAEhL,IAAAA,CAAK+L,EAAAA,KAAc/V,CAAAA,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,GAAS;YAAC4D;SAAAA,AAAAA,GAGtD;YAAA,IAAA;YACL/V,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,GAA6B,SAApB6C,CAAAA,IAAAhV,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,AAAAA,KAAAA,KAAQ,MAAA6C,IAAAA,KAAA,IAAAA,EAAAzL,MAAAA,CAAQwN,CAAAA,IAAMhB,MAAagB;QAAE;IAEzE;IAED,IAAI5E,CAAAA,EAAe4D,CAAAA,EAAAA;QAAAA,IAAAA;QACjB/V,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,GAA6B,SAApB6C,CAAAA,IAAAhV,IAAAA,CAAK4W,MAAAA,CAAOzE,EAAAA,AAAAA,KAAAA,KAAQ,MAAA6C,IAAAA,KAAA,IAAAA,EAAAzL,MAAAA,CAAQwN,CAAAA,IAAMhB,MAAagB;IACrE;IAED,UAAAtV;QACEzB,IAAAA,CAAK4W,MAAAA,GAAS,CAAA;IACf;AAAA;AC5BH,MAAMK,IAAc,MAAM;AAAA,MAEbC;IAmBX,YACEC,CAAAA,EAAAA,EACAC,iBAAEA,IAAkB,CAAA,EAACC,iBAAEA,IAAkB,CAAA,EAAA,CAAA;QAZ3CrX,IAAAA,CAAAsX,SAAAA,GAGI;YACF7C,GAAG;YACHC,GAAG;QAAA,GAEL1U,IAAAA,CAAWuX,WAAAA,GAAW,GACtBvX,IAAAA,CAAYwX,YAAAA,GAAW,GAwEvBxX,IAAAA,CAAAyX,YAAAA,GAAgBtF,CAAAA;YAEd,MAAA,EAAMuF,SAAEA,CAAAA,EAAOC,SAAEA,CAAAA,EAAAA,GAAYxF,EAAMyF,aAAAA,GAC/BzF,EAAMyF,aAAAA,CAAc,EAAA,GACpBzF;YAEJnS,IAAAA,CAAK6X,UAAAA,CAAWpD,CAAAA,GAAIiD,GACpB1X,IAAAA,CAAK6X,UAAAA,CAAWnD,CAAAA,GAAIiD,GAEpB3X,IAAAA,CAAKsX,SAAAA,GAAY;gBACf7C,GAAG;gBACHC,GAAG;YAAA,GAGL1U,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,UAAU;gBAC1BkB,QAAQ;gBACRC,QAAQ;gBACR7F,OAAAA;YAAAA;QACA,GAIJnS,IAAAA,CAAAiY,WAAAA,GAAe9F,CAAAA;YAAAA,IAAAA,GAAAA,GAAAA,GAAAA;YAEb,MAAA,EAAMuF,SAAEA,CAAAA,EAAOC,SAAEA,CAAAA,EAAAA,GAAYxF,EAAMyF,aAAAA,GAC/BzF,EAAMyF,aAAAA,CAAc,EAAA,GACpBzF,GAEE4F,IAAAA,CAAWL,CAAAA,IAAAA,CAAAA,SAAWjB,CAAAA,IAAiB,SAAjBzB,CAAAA,IAAAhV,IAAAA,CAAK6X,UAAAA,AAAAA,KAAAA,KAAY,MAAA7C,IAAAA,KAAA,IAAAA,EAAAP,CAAAA,AAAAA,KAAAA,KAAAA,MAAAA,IAAAA,IAAK,CAAA,CAAA,IAAMzU,IAAAA,CAAKqX,eAAAA,EACvDW,IAAAA,CAAWL,CAAAA,IAAAA,CAAAA,SAAWO,CAAAA,IAAiB,SAAjBC,CAAAA,IAAAnY,IAAAA,CAAK6X,UAAAA,AAAAA,KAAAA,KAAY,MAAAM,IAAAA,KAAA,IAAAA,EAAAzD,CAAAA,AAAAA,KAAAA,KAAAA,MAAAA,IAAAA,IAAK,CAAA,CAAA,IAAM1U,IAAAA,CAAKqX,eAAAA;YAE7DrX,IAAAA,CAAK6X,UAAAA,CAAWpD,CAAAA,GAAIiD,GACpB1X,IAAAA,CAAK6X,UAAAA,CAAWnD,CAAAA,GAAIiD,GAEpB3X,IAAAA,CAAKsX,SAAAA,GAAY;gBACf7C,GAAGsD;gBACHrD,GAAGsD;YAAAA,GAGLhY,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,UAAU;gBAC1BkB,QAAAA;gBACAC,QAAAA;gBACA7F,OAAAA;YAAAA;QACA,GAGJnS,IAAAA,CAAAoY,UAAAA,GAAcjG,CAAAA;YACZnS,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,UAAU;gBAC1BkB,QAAQ/X,IAAAA,CAAKsX,SAAAA,CAAU7C,CAAAA;gBACvBuD,QAAQhY,IAAAA,CAAKsX,SAAAA,CAAU5C,CAAAA;gBACvBvC,OAAAA;YAAAA;QACA,GAIJnS,IAAAA,CAAAqY,OAAAA,GAAWlG,CAAAA;YACT,IAAA,EAAI4F,QAAEA,CAAAA,EAAMC,QAAEA,CAAAA,EAAMM,WAAEA,CAAAA,EAAAA,GAAcnG;YAOpC4F,KAJgB,MAAdO,IAAkBrB,IAA4B,MAAdqB,IAAkBtY,IAAAA,CAAKuX,WAAAA,GAAc,GAKvES,KAHgB,MAAdM,IAAkBrB,IAA4B,MAAdqB,IAAkBtY,IAAAA,CAAKwX,YAAAA,GAAe,GAKxEO,KAAU/X,IAAAA,CAAKoX,eAAAA,EACfY,KAAUhY,IAAAA,CAAKoX,eAAAA,EAEfpX,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,UAAU;gBAAEkB,QAAAA;gBAAQC,QAAAA;gBAAQ7F,OAAAA;YAAAA;QAAQ,GAGxDnS,IAAAA,CAAcuY,cAAAA,GAAG;YACfvY,IAAAA,CAAKuX,WAAAA,GAAc9R,OAAOY,UAAAA,EAC1BrG,IAAAA,CAAKwX,YAAAA,GAAe/R,OAAOW,WAAW;QAAA,GA5ItCpG,IAAAA,CAAKmX,OAAAA,GAAUA,GACfnX,IAAAA,CAAKoX,eAAAA,GAAkBA,GACvBpX,IAAAA,CAAKqX,eAAAA,GAAkBA,GAEvBrX,IAAAA,CAAK6X,UAAAA,GAAa;YAChBpD,GAAG;YACHC,GAAG;QAAA,GAGL1U,IAAAA,CAAK8X,OAAAA,GAAU,IAAInB,SACnBlR,OAAOyL,gBAAAA,CAAiB,UAAUlR,IAAAA,CAAKuY,cAAAA,EAAAA,CAAgB,IACvDvY,IAAAA,CAAKuY,cAAAA,IAELvY,IAAAA,CAAKmX,OAAAA,CAAQjG,gBAAAA,CAAiB,SAASlR,IAAAA,CAAKqY,OAAAA,EAA0B;YACpEG,SAAAA,CAAS;QAAA,IAEXxY,IAAAA,CAAKmX,OAAAA,CAAQjG,gBAAAA,CACX,cACAlR,IAAAA,CAAKyX,YAAAA,EACL;YACEe,SAAAA,CAAS;QAAA,IAGbxY,IAAAA,CAAKmX,OAAAA,CAAQjG,gBAAAA,CACX,aACAlR,IAAAA,CAAKiY,WAAAA,EACL;YACEO,SAAAA,CAAS;QAAA,IAGbxY,IAAAA,CAAKmX,OAAAA,CAAQjG,gBAAAA,CACX,YACAlR,IAAAA,CAAKoY,UAAAA,EACL;YACEI,SAAAA,CAAS;QAAA;IAGd;IAGD,GAAGrG,CAAAA,EAAe4D,CAAAA,EAAAA;QAChB,OAAO/V,IAAAA,CAAK8X,OAAAA,CAAQ1H,EAAAA,CAAG+B,GAAO4D;IAC/B;IAGD,UAAAtU;QACEzB,IAAAA,CAAK8X,OAAAA,CAAQrW,OAAAA,IAEbgE,OAAO2L,mBAAAA,CAAoB,UAAUpR,IAAAA,CAAKuY,cAAAA,EAAAA,CAAgB,IAE1DvY,IAAAA,CAAKmX,OAAAA,CAAQ/F,mBAAAA,CAAoB,SAASpR,IAAAA,CAAKqY,OAAAA,GAC/CrY,IAAAA,CAAKmX,OAAAA,CAAQ/F,mBAAAA,CACX,cACApR,IAAAA,CAAKyX,YAAAA,GAEPzX,IAAAA,CAAKmX,OAAAA,CAAQ/F,mBAAAA,CACX,aACApR,IAAAA,CAAKiY,WAAAA,GAEPjY,IAAAA,CAAKmX,OAAAA,CAAQ/F,mBAAAA,CACX,YACApR,IAAAA,CAAKoY,UAAAA;IAER;AAAA;ACvCW,MAAOvI;IA2BnB,YAAAkE,EAAYhE,SACVA,IAAUtK,MAAAA,EAAMuK,SAChBA,IAAUC,SAASC,eAAAA,EAAeuI,mBAClCA,IAAoB1I,CAAAA,EAAO2I,cAC3BA,IAAeD,CAAAA,EAAiBvG,aAChCA,IAAAA,CAAc,CAAA,EAAIyG,WAClBA,IAAAA,CAAY,CAAA,EAAKC,eACjBA,IAAgB,IAAA,EAAKC,wBACrBA,IAAyB,EAAA,EAAEpG,UAC3BA,CAAAA,EAAQe,QACRA,IAAUqB,CAAAA,IAAM/R,KAAK8Q,GAAAA,CAAI,GAAG,QAAQ9Q,KAAKgW,GAAAA,CAAI,GAAA,MAASjE,GAAAA,EAAGzB,MACzDA,IAAO,EAAA,EAAGjD,UACVA,IAAAA,CAAW,CAAA,EAAKI,aAChBA,IAAc,UAAA,EAAUwI,oBACxBA,IAAqB,UAAA,EAAU1B,iBAC/BA,IAAkB,CAAA,EAACD,iBACnBA,IAAkB,CAAA,EAAC9I,YACnBA,IAAAA,CAAa,CAAA,EAAI0K,SACjBA,CAAAA,EAAOC,eACPA,CAAAA,EAAaC,iCACbA,IAAAA,CAAkC,CAAA,EAAA,GAClB,CAAA,CAAA,CAAA;QA9ClBlZ,IAAAA,CAAamZ,aAAAA,GAAAA,CAAc,GAC3BnZ,IAAAA,CAAWoZ,WAAAA,GAAAA,CAAY,GACvBpZ,IAAAA,CAAUqZ,UAAAA,GAAAA,CAAY,GAMtBrZ,IAAAA,CAAQsZ,QAAAA,GAAW,CAAA,GACnBtZ,IAAAA,CAAYuZ,YAAAA,GAAW,GACvBvZ,IAAAA,CAAQwZ,QAAAA,GAAW,GACnBxZ,IAAAA,CAASyZ,SAAAA,GAAe,GAoJhBzZ,IAAAA,CAAA0Z,aAAAA,GAAiBvH,CAAAA;YACF,MAAjBA,EAAMwH,MAAAA,IACR3Z,IAAAA,CAAK4Z,KAAAA;QACN,GAGK5Z,IAAAA,CAAA6Z,eAAAA,GAAmBC,CAAAA;YACzB,IACwC,cAAA,OAA/B9Z,IAAAA,CAAKsQ,OAAAA,CAAQ2I,aAAAA,IAAAA,CACiB,MAArCjZ,IAAAA,CAAKsQ,OAAAA,CAAQ2I,aAAAA,CAAca,IAE3B;YAEF,MAAA,EAAM/B,QAAEA,CAAAA,EAAMC,QAAEA,CAAAA,EAAM7F,OAAEA,CAAAA,EAAAA,GAAU2H;YAKlC,IAHA9Z,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,kBAAkB;gBAAEkB,QAAAA;gBAAQC,QAAAA;gBAAQ7F,OAAAA;YAAAA,IAGlDA,EAAM4H,OAAAA,EAAS;YAEnB,MAAMC,IAAU7H,EAAM8H,IAAAA,CAAKhS,QAAAA,CAAS,UAC9BiS,IAAU/H,EAAM8H,IAAAA,CAAKhS,QAAAA,CAAS;YAEpCjI,IAAAA,CAAKma,UAAAA,GAA4B,iBAAfhI,EAAM8H,IAAAA,IAAwC,gBAAf9H,EAAM8H,IAAAA;YAkBvD,IANEja,IAAAA,CAAKsQ,OAAAA,CAAQqI,SAAAA,IACbqB,KACe,iBAAf7H,EAAM8H,IAAAA,IAAAA,CACLja,IAAAA,CAAKoa,SAAAA,IAAAA,CACLpa,IAAAA,CAAKqa,QAAAA,EAIN,OAAA,KADAra,IAAAA,CAAK4Z,KAAAA;YAIP,MAAMU,IAAqB,MAAXvC,KAA2B,MAAXC,GAQ1BuC,IACiC,eAApCva,IAAAA,CAAKsQ,OAAAA,CAAQyI,kBAAAA,IAAgD,MAAXf,KACd,iBAApChY,IAAAA,CAAKsQ,OAAAA,CAAQyI,kBAAAA,IAAkD,MAAXhB;YAEvD,IAAIuC,KAAWC,GAEb;YAIF,IAAIC,IAAerI,EAAMqI,YAAAA;YACzBA,IAAeA,EAAaC,KAAAA,CAAM,GAAGD,EAAatO,OAAAA,CAAQlM,IAAAA,CAAKyQ,WAAAA;YAE/D,MAAMuI,IAAUhZ,IAAAA,CAAKsQ,OAAAA,CAAQ0I,OAAAA;YAE7B,IACIwB,EAAa7Z,IAAAA,CACZ+Z,CAAAA;gBAAAA,IAAAA,GAAAA,GAAAA,GAAAA,GAAAA;gBACC,OAAAA,aAAgBC,WACK,CAAA,cAAA,OAAZ3B,KAA0BA,CAAAA,QAAAA,IAAAA,KAAAA,IAAAA,EAAU0B,EAAAA,KACvB,CAAA,SAApB1F,CAAAA,IAAA0F,EAAKE,YAAAA,AAAAA,KAAAA,KAAe,MAAA5F,IAAAA,KAAA,IAAAA,EAAAvM,IAAAA,CAAAiS,GAAA,qBAAA,KACnBV,KAA+B,CAAA,SAApBvD,CAAAA,IAAAiE,EAAKE,YAAAA,AAAAA,KAAAA,KAAe,MAAAnE,IAAAA,KAAA,IAAAA,EAAAhO,IAAAA,CAAAiS,GAAA,2BAAA,KAC/BR,KAA+B,CAAA,SAApB/B,CAAAA,IAAAuC,EAAKE,YAAAA,AAAAA,KAAAA,KAAe,MAAAzC,IAAAA,KAAA,IAAAA,EAAA1P,IAAAA,CAAAiS,GAAA,2BAAA,KAAA,AACf,CAAA,SAAA,CAAA,IAAhBA,EAAK/T,SAAAA,AAAAA,KAAAA,KAAW,MAAAuR,IAAAA,KAAA,IAAAA,EAAA2C,QAAAA,CAAS,QAAA,KAAA,CACT,CAAA,SAAdC,CAAAA,IAAAJ,EAAK/T,SAAAA,AAAAA,KAAAA,KAAS,MAAAmU,IAAAA,KAAA,IAAAA,EAAED,QAAAA,CAAS,gBAAA,CAAA;YAAkB,IAGpD;YAEF,IAAI7a,IAAAA,CAAKoa,SAAAA,IAAapa,IAAAA,CAAKqa,QAAAA,EAEzB,OAAA,KADAlI,EAAME,cAAAA;YAQR,IAAA,CAHGrS,CAAAA,IAAAA,CAAKsQ,OAAAA,CAAQqI,SAAAA,IAAaqB,KAC1Bha,IAAAA,CAAKsQ,OAAAA,CAAQ4B,WAAAA,IAAegI,CAAAA,GAK7B,OAFAla,IAAAA,CAAK+a,WAAAA,GAAc,UAAA,KACnB/a,IAAAA,CAAKgb,OAAAA,CAAQnK,IAAAA;YAIfsB,EAAME,cAAAA;YAEN,IAAI4I,IAAQjD;YAC4B,WAApChY,IAAAA,CAAKsQ,OAAAA,CAAQyI,kBAAAA,GACfkC,IAAQnY,KAAKC,GAAAA,CAAIiV,KAAUlV,KAAKC,GAAAA,CAAIgV,KAAUC,IAASD,IACV,iBAApC/X,IAAAA,CAAKsQ,OAAAA,CAAQyI,kBAAAA,IACtBkC,CAAAA,IAAQlD,CAAAA;YAGV,MAAMY,IAAYqB,KAAWha,IAAAA,CAAKsQ,OAAAA,CAAQqI,SAAAA,EAGpCuC,IAFalB,KAA0B,eAAf7H,EAAM8H,IAAAA,IAEEnX,KAAKC,GAAAA,CAAIkY,KAAS;YAEpDC,KACFD,CAAAA,IAAQjb,IAAAA,CAAKwZ,QAAAA,GAAWxZ,IAAAA,CAAKsQ,OAAAA,CAAQuI,sBAAAA,AAAAA,GAGvC7Y,IAAAA,CAAK0S,QAAAA,CAAS1S,IAAAA,CAAKmb,YAAAA,GAAeF,GAAK5R,OAAAmG,MAAAA,CAAA;gBACrC4L,cAAAA,CAAc;YAAA,GACVzC,IACA;gBACEvF,MAAM8H,IAAkBlb,IAAAA,CAAKsQ,OAAAA,CAAQsI,aAAAA,GAAgB;YAAA,IAEvD;gBACExF,MAAMpT,IAAAA,CAAKsQ,OAAAA,CAAQ8C,IAAAA;gBACnBX,UAAUzS,IAAAA,CAAKsQ,OAAAA,CAAQmC,QAAAA;gBACvBe,QAAQxT,IAAAA,CAAKsQ,OAAAA,CAAQkD,MAAAA;YAAAA;QAE3B,GAWIxT,IAAAA,CAAcqb,cAAAA,GAAG;YAIvB,IAHAhF,aAAarW,IAAAA,CAAKsb,sBAAAA,GAAAA,OACXtb,IAAAA,CAAKsb,sBAAAA,EAERtb,IAAAA,CAAKub,8BAAAA,EAAAA,OACAvb,IAAAA,CAAKub,8BAAAA;iBAId,IAAA,CAAyB,MAArBvb,IAAAA,CAAK+a,WAAAA,IAA8C,aAArB/a,IAAAA,CAAK+a,WAAAA,EAA0B;gBAC/D,MAAMS,IAAaxb,IAAAA,CAAKyb,cAAAA;gBACxBzb,IAAAA,CAAKyb,cAAAA,GAAiBzb,IAAAA,CAAKmb,YAAAA,GAAenb,IAAAA,CAAK0b,YAAAA,EAC/C1b,IAAAA,CAAKuZ,YAAAA,GAAevZ,IAAAA,CAAKwZ,QAAAA,EACzBxZ,IAAAA,CAAKwZ,QAAAA,GAAWxZ,IAAAA,CAAKyb,cAAAA,GAAiBD,GACtCxb,IAAAA,CAAKyZ,SAAAA,GAAY3W,KAAK6Y,IAAAA,CACpB3b,IAAAA,CAAKyb,cAAAA,GAAiBD,IAGxBxb,IAAAA,CAAK+a,WAAAA,GAAc,UACnB/a,IAAAA,CAAK6W,IAAAA,IAEiB,MAAlB7W,IAAAA,CAAKwZ,QAAAA,IACPxZ,CAAAA,IAAAA,CAAKsb,sBAAAA,GAAyBhF,WAAW;oBACvCtW,IAAAA,CAAKuZ,YAAAA,GAAevZ,IAAAA,CAAKwZ,QAAAA,EACzBxZ,IAAAA,CAAKwZ,QAAAA,GAAW,GAChBxZ,IAAAA,CAAK+a,WAAAA,GAAAA,CAAc,GACnB/a,IAAAA,CAAK6W,IAAAA;gBAAM,GACV,IAAA;YAKN;QAAA,GAzRDpR,OAAOmW,YAAAA,GAAAA,SAIJ7L,KACDA,MAAYE,SAASC,eAAAA,IACrBH,MAAYE,SAASgB,IAAAA,IAErBlB,CAAAA,IAAUtK,MAAAA,GAGZzF,IAAAA,CAAKsQ,OAAAA,GAAU;YACbP,SAAAA;YACAC,SAAAA;YACAyI,mBAAAA;YACAC,cAAAA;YACAxG,aAAAA;YACAyG,WAAAA;YACAC,eAAAA;YACAC,wBAAAA;YACApG,UAAAA;YACAe,QAAAA;YACAJ,MAAAA;YACAjD,UAAAA;YACA4I,oBAAAA;YACAxI,aAAAA;YACA8G,iBAAAA;YACAD,iBAAAA;YACA9I,YAAAA;YACA0K,SAAAA;YACAC,eAAAA;YACAC,iCAAAA;QAAAA,GAGFlZ,IAAAA,CAAKgb,OAAAA,GAAU,IAAIlH,SACnB9T,IAAAA,CAAK8X,OAAAA,GAAU,IAAInB,SACnB3W,IAAAA,CAAK6b,UAAAA,GAAa,IAAIzG,WAAW;YAAErF,SAAAA;YAASC,SAAAA;YAAS1B,YAAAA;QAAAA,IAErDtO,IAAAA,CAAK8b,eAAAA,IAEL9b,IAAAA,CAAKsZ,QAAAA,GAAW,CAAA,GAChBtZ,IAAAA,CAAK+b,IAAAA,GAAO,GACZ/b,IAAAA,CAAKwZ,QAAAA,GAAWxZ,IAAAA,CAAKuZ,YAAAA,GAAe,GACpCvZ,IAAAA,CAAKqa,QAAAA,GAAAA,CAAW,GAChBra,IAAAA,CAAKoa,SAAAA,GAAAA,CAAY,GAIjBpa,IAAAA,CAAK+a,WAAAA,GAAAA,CAAc,GACnB/a,IAAAA,CAAKmb,YAAAA,GAAenb,IAAAA,CAAKyb,cAAAA,GAAiBzb,IAAAA,CAAK0b,YAAAA,EAE/C1b,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,CAAQmB,gBAAAA,CAAiB,UAAUlR,IAAAA,CAAKqb,cAAAA,EAAAA,CAAgB,IAErErb,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,CAAQmB,gBAAAA,CACnB,eACAlR,IAAAA,CAAK0Z,aAAAA,EAAAA,CACL,IAGF1Z,IAAAA,CAAKiZ,aAAAA,GAAgB,IAAI/B,cAAcwB,GAAc;YACnDrB,iBAAAA;YACAD,iBAAAA;QAAAA,IAEFpX,IAAAA,CAAKiZ,aAAAA,CAAc7I,EAAAA,CAAG,UAAUpQ,IAAAA,CAAK6Z,eAAAA;IACtC;IAED,UAAApY;QACEzB,IAAAA,CAAK8X,OAAAA,CAAQrW,OAAAA,IAEbzB,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,CAAQqB,mBAAAA,CACnB,UACApR,IAAAA,CAAKqb,cAAAA,EAAAA,CACL,IAEFrb,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,CAAQqB,mBAAAA,CACnB,eACApR,IAAAA,CAAK0Z,aAAAA,EAAAA,CACL,IAGF1Z,IAAAA,CAAKiZ,aAAAA,CAAcxX,OAAAA,IACnBzB,IAAAA,CAAK6b,UAAAA,CAAWpa,OAAAA,IAEhBzB,IAAAA,CAAKgc,gBAAAA;IASN;IAED,GAAG7J,CAAAA,EAAe4D,CAAAA,EAAAA;QAChB,OAAO/V,IAAAA,CAAK8X,OAAAA,CAAQ1H,EAAAA,CAAG+B,GAAO4D;IAC/B;IAED,IAAI5D,CAAAA,EAAe4D,CAAAA,EAAAA;QACjB,OAAO/V,IAAAA,CAAK8X,OAAAA,CAAQd,GAAAA,CAAI7E,GAAO4D;IAChC;IAEO,UAAUnE,CAAAA,EAAAA;QAEZ5R,IAAAA,CAAKkc,YAAAA,GACPlc,IAAAA,CAAKyQ,WAAAA,CAAY0L,UAAAA,GAAavK,IAE9B5R,IAAAA,CAAKyQ,WAAAA,CAAY2L,SAAAA,GAAYxK;IAEhC;IAoID,SAAAsB;QACElT,IAAAA,CAAK6b,UAAAA,CAAW3I,MAAAA;IACjB;IAEO,OAAA2D;QACN7W,IAAAA,CAAK8X,OAAAA,CAAQjB,IAAAA,CAAK,UAAU7W,IAAAA;IAC7B;IAqCO,QAAA4Z;QACN5Z,IAAAA,CAAKqa,QAAAA,GAAAA,CAAW,GAChBra,IAAAA,CAAK+a,WAAAA,GAAAA,CAAc,GACnB/a,IAAAA,CAAKyb,cAAAA,GAAiBzb,IAAAA,CAAKmb,YAAAA,GAAenb,IAAAA,CAAK0b,YAAAA,EAC/C1b,IAAAA,CAAKuZ,YAAAA,GAAevZ,IAAAA,CAAKwZ,QAAAA,GAAW,GACpCxZ,IAAAA,CAAKgb,OAAAA,CAAQnK,IAAAA;IACd;IAED,QAAAzL;QACOpF,IAAAA,CAAKoa,SAAAA,IACVpa,CAAAA,IAAAA,CAAKoa,SAAAA,GAAAA,CAAY,GAEjBpa,IAAAA,CAAK4Z,KAAAA,EAAAA;IACN;IAED,OAAA/I;QACM7Q,IAAAA,CAAKoa,SAAAA,IACTpa,CAAAA,IAAAA,CAAKoa,SAAAA,GAAAA,CAAY,GACjBpa,IAAAA,CAAKgb,OAAAA,CAAQnK,IAAAA,IAEb7Q,IAAAA,CAAK4Z,KAAAA,EAAAA;IACN;IAED,IAAImC,CAAAA,EAAAA;QACF,MAAM3H,IAAY2H,IAAQ/b,CAAAA,IAAAA,CAAK+b,IAAAA,IAAQA,CAAAA;QACvC/b,IAAAA,CAAK+b,IAAAA,GAAOA,GAEZ/b,IAAAA,CAAKgb,OAAAA,CAAQ7G,OAAAA,CAAoB,OAAZC;IACtB;IAED,SACEtT,CAAAA,EAAAA,EACA4G,QACEA,IAAS,CAAA,EAAC2L,WACVA,IAAAA,CAAY,CAAA,EAAKC,MACjBA,IAAAA,CAAO,CAAA,EAAKb,UACZA,IAAWzS,IAAAA,CAAKsQ,OAAAA,CAAQmC,QAAAA,EAAQe,QAChCA,IAASxT,IAAAA,CAAKsQ,OAAAA,CAAQkD,MAAAA,EAAMJ,MAC5BA,IAAOpT,IAAAA,CAAKsQ,OAAAA,CAAQ8C,IAAAA,EAAI+B,SACxBA,CAAAA,EAAO1B,YACPA,CAAAA,EAAUF,OACVA,IAAAA,CAAQ,CAAA,EAAK6H,cACbA,IAAAA,CAAe,CAAA,EAAI9B,UACnBA,IAAW,CAAE,CAAA,EAAA,GAaX,CAAA,CAAA,EAAA;QAEJ,IAAA,CAAKtZ,IAAAA,CAAKoa,SAAAA,IAAAA,CAAapa,IAAAA,CAAKqa,QAAAA,IAAc9G,GAA1C;YAGA,IACoB,YAAA,OAAXzS,KACP;gBAAC;gBAAO;gBAAQ;aAAA,CAASmH,QAAAA,CAASnH,IAElCA,IAAS;iBACJ,IACa,YAAA,OAAXA,KACP;gBAAC;gBAAU;gBAAS;aAAA,CAAOmH,QAAAA,CAASnH,IAEpCA,IAASd,IAAAA,CAAK0W,KAAAA;iBACT;gBACL,IAAIgE;gBAUJ,IARsB,YAAA,OAAX5Z,IAET4Z,IAAOzK,SAASoM,aAAAA,CAAcvb,KACrBA,aAAkB6U,eAAe7U,CAAAA,QAAAA,IAAAA,KAAM,IAANA,EAAQwb,QAAAA,AAAAA,KAElD5B,CAAAA,IAAO5Z,CAAAA,GAGL4Z,GAAM;oBACR,IAAI1a,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,KAAYtK,QAAQ;wBAEnC,MAAM8W,IAAcvc,IAAAA,CAAKyQ,WAAAA,CAAYxJ,qBAAAA;wBACrCS,KAAU1H,IAAAA,CAAKkc,YAAAA,GAAeK,EAAY9U,IAAAA,GAAO8U,EAAY/U,GAC9D;oBAAA;oBAED,MAAMgV,IAAO9B,EAAKzT,qBAAAA;oBAElBnG,IAAAA,AACGd,CAAAA,IAAAA,CAAKkc,YAAAA,GAAeM,EAAK/U,IAAAA,GAAO+U,EAAKhV,GAAAA,AAAAA,IAAOxH,IAAAA,CAAKyb,cACrD;gBAAA;YACF;YAED,IAAsB,YAAA,OAAX3a,KAEXA,CAAAA,KAAU4G,GACV5G,IAASgC,KAAKiS,KAAAA,CAAMjU,IAEhBd,IAAAA,CAAKsQ,OAAAA,CAAQH,QAAAA,GACXiL,KACFpb,CAAAA,IAAAA,CAAKmb,YAAAA,GAAenb,IAAAA,CAAKyb,cAAAA,GAAiBzb,IAAAA,CAAK4R,MAAAA,AAAAA,IAGjD9Q,IAAS6S,MAAM,GAAG7S,GAAQd,IAAAA,CAAK0W,KAAAA,GAG7B5V,MAAWd,IAAAA,CAAKmb,YAAAA,AAAAA,GAApB;gBAIA,IAFAnb,IAAAA,CAAKsZ,QAAAA,GAAWA,GAEZjG,GAQF,OAPArT,IAAAA,CAAKyb,cAAAA,GAAiBzb,IAAAA,CAAKmb,YAAAA,GAAera,GAC1Cd,IAAAA,CAAKic,SAAAA,CAAUjc,IAAAA,CAAK4R,MAAAA,GACpB5R,IAAAA,CAAK4Z,KAAAA,IACL5Z,IAAAA,CAAKyc,4BAAAA,IACLzc,IAAAA,CAAK6W,IAAAA,IACLpD,QAAAA,KAAAA,EAAazT,IAAAA,GAAAA,KACbA,CAAAA,IAAAA,CAAKsZ,QAAAA,GAAW,CAAA,CAAA;gBAIb8B,KACHpb,CAAAA,IAAAA,CAAKmb,YAAAA,GAAera,CAAAA,GAGtBd,IAAAA,CAAKgb,OAAAA,CAAQ9F,MAAAA,CAAOlV,IAAAA,CAAKyb,cAAAA,EAAgB3a,GAAQ;oBAC/C2R,UAAAA;oBACAe,QAAAA;oBACAJ,MAAAA;oBACA+B,SAAS;wBAEH7B,KAAMtT,CAAAA,IAAAA,CAAKqa,QAAAA,GAAAA,CAAW,CAAA,GAC1Bra,IAAAA,CAAK+a,WAAAA,GAAc,UACnB5F,QAAAA,KAAAA,EAAUnV,IAAAA;oBAAK;oBAEjBiV,UAAU,CAACzT,GAAe6S;wBACxBrU,IAAAA,CAAK+a,WAAAA,GAAc,UAGnB/a,IAAAA,CAAKuZ,YAAAA,GAAevZ,IAAAA,CAAKwZ,QAAAA,EACzBxZ,IAAAA,CAAKwZ,QAAAA,GAAWhY,IAAQxB,IAAAA,CAAKyb,cAAAA,EAC7Bzb,IAAAA,CAAKyZ,SAAAA,GAAY3W,KAAK6Y,IAAAA,CAAK3b,IAAAA,CAAKwZ,QAAAA,GAEhCxZ,IAAAA,CAAKyb,cAAAA,GAAiBja,GACtBxB,IAAAA,CAAKic,SAAAA,CAAUjc,IAAAA,CAAK4R,MAAAA,GAEhBwJ,KAEFpb,CAAAA,IAAAA,CAAKmb,YAAAA,GAAe3Z,CAAAA,GAGjB6S,KAAWrU,IAAAA,CAAK6W,IAAAA,IAEjBxC,KACFrU,CAAAA,IAAAA,CAAK4Z,KAAAA,IACL5Z,IAAAA,CAAK6W,IAAAA,IACLpD,QAAAA,KAAAA,EAAazT,IAAAA,GACbA,IAAAA,CAAKsZ,QAAAA,GAAW,CAAA,GAGhBtZ,IAAAA,CAAKyc,4BAAAA,EAAAA;oBACN;gBAAA;YAvDmC;QAnDe;IA6GxD;IAEO,+BAAAA;QACNzc,IAAAA,CAAKub,8BAAAA,GAAAA,CAAiC,GAEtC/K,sBAAsB;YAAA,OACbxQ,IAAAA,CAAKub,8BAA8B;QAAA;IAE7C;IAED,IAAA,cAAI9K;QACF,OACEzQ,IAAAA,CAAKsQ,OAAAA,CAAQP,OAAAA,KAAYtK,SACrBwK,SAASC,eAAAA,GACTlQ,IAAAA,CAAKsQ,OAAAA,CAAQP,OAEpB;IAAA;IAED,IAAA,QAAI2G;QACF,OAAI1W,IAAAA,CAAKsQ,OAAAA,CAAQ4I,+BAAAA,GACXlZ,IAAAA,CAAKkc,YAAAA,GACAlc,IAAAA,CAAKyQ,WAAAA,CAAY8E,WAAAA,GAAcvV,IAAAA,CAAKyQ,WAAAA,CAAYmF,WAAAA,GAEhD5V,IAAAA,CAAKyQ,WAAAA,CAAY+E,YAAAA,GAAexV,IAAAA,CAAKyQ,WAAAA,CAAYoF,YAAAA,GAGnD7V,IAAAA,CAAK6b,UAAAA,CAAWnF,KAAAA,CAAM1W,IAAAA,CAAKkc,YAAAA,GAAe,MAAM,IAE1D;IAAA;IAED,IAAA,eAAIA;QACF,OAAoC,iBAA7Blc,IAAAA,CAAKsQ,OAAAA,CAAQC,WACrB;IAAA;IAED,IAAA,eAAImL;QAEF,OAAO1b,IAAAA,CAAKkc,YAAAA,GACRlc,IAAAA,CAAKyQ,WAAAA,CAAY0L,UAAAA,GACjBnc,IAAAA,CAAKyQ,WAAAA,CAAY2L,SACtB;IAAA;IAED,IAAA,SAAIxK;QACF,OAAO5R,IAAAA,CAAKsQ,OAAAA,CAAQH,QAAAA,GN5jBjB,SAASuM,OAAOC,CAAAA,EAAGC,CAAAA;YACxB,OAAA,AAASD,CAAAA,IAAIC,IAAKA,CAAAA,IAAKA;QACzB,EM2jBe5c,IAAAA,CAAKyb,cAAAA,EAAgBzb,IAAAA,CAAK0W,KAAAA,IACjC1W,IAAAA,CAAKyb,cACV;IAAA;IAED,IAAA,WAAIzX;QAEF,OAAsB,MAAfhE,IAAAA,CAAK0W,KAAAA,GAAc,IAAI1W,IAAAA,CAAK4R,MAAAA,GAAS5R,IAAAA,CAAK0W,KAClD;IAAA;IAaD,IAAA,cAAIqE;QACF,OAAO/a,IAAAA,CAAKmZ,aACb;IAAA;IAED,IAAA,YAAwB3X,CAAAA,EAAAA;QAClBxB,IAAAA,CAAKmZ,aAAAA,KAAkB3X,KACzBxB,CAAAA,IAAAA,CAAKmZ,aAAAA,GAAgB3X,GACrBxB,IAAAA,CAAK8b,eAAAA,EAAAA;IAER;IAED,IAAA,YAAI1B;QACF,OAAOpa,IAAAA,CAAKoZ,WACb;IAAA;IAED,IAAA,UAAsB5X,CAAAA,EAAAA;QAChBxB,IAAAA,CAAKoZ,WAAAA,KAAgB5X,KACvBxB,CAAAA,IAAAA,CAAKoZ,WAAAA,GAAc5X,GACnBxB,IAAAA,CAAK8b,eAAAA,EAAAA;IAER;IAED,IAAA,WAAIzB;QACF,OAAOra,IAAAA,CAAKqZ,UACb;IAAA;IAED,IAAA,SAAqB7X,CAAAA,EAAAA;QACfxB,IAAAA,CAAKqZ,UAAAA,KAAe7X,KACtBxB,CAAAA,IAAAA,CAAKqZ,UAAAA,GAAa7X,GAClBxB,IAAAA,CAAK8b,eAAAA,EAAAA;IAER;IAED,IAAA,WAAIe;QACF,OAA4B,aAArB7c,IAAAA,CAAK+a,WACb;IAAA;IAED,IAAA,YAAI+B;QACF,IAAIA,IAAY;QAOhB,OANI9c,IAAAA,CAAKoa,SAAAA,IAAW0C,CAAAA,KAAa,gBAAA,GAC7B9c,IAAAA,CAAKqa,QAAAA,IAAUyC,CAAAA,KAAa,eAAA,GAC5B9c,IAAAA,CAAK+a,WAAAA,IAAa+B,CAAAA,KAAa,kBAAA,GACV,aAArB9c,IAAAA,CAAK+a,WAAAA,IAA0B+B,CAAAA,KAAa,eAAA,GAGzCA;IACR;IAEO,kBAAAhB;QACN9b,IAAAA,CAAKgc,gBAAAA,IAELhc,IAAAA,CAAKyQ,WAAAA,CAAYqM,SAAAA,GACf,CAAA,EAAG9c,IAAAA,CAAKyQ,WAAAA,CAAYqM,SAAAA,CAAAA,CAAAA,EAAa9c,IAAAA,CAAK8c,SAAAA,CAAAA,CAAAA,CAAYjV,IAAAA;IACrD;IAEO,mBAAAmU;QACNhc,IAAAA,CAAKyQ,WAAAA,CAAYqM,SAAAA,GAAY9c,IAAAA,CAAKyQ,WAAAA,CAAYqM,SAAAA,CAC3C3U,OAAAA,CAAQ,iBAAiB,IACzBN,IAAAA;IACJ;ANjqBI;;;AODP,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-d09374408c53c542.js","index.js","node_modules/locomotive-scroll/dist/locomotive-scroll.mjs","node_modules/locomotive-scroll/core/IO.ts","node_modules/locomotive-scroll/utils/maths.ts","node_modules/locomotive-scroll/core/ScrollElement.ts","node_modules/locomotive-scroll/core/Core.ts","node_modules/locomotive-scroll/core/RO.ts","node_modules/locomotive-scroll/index.ts","node_modules/lenis/dist/lenis.mjs","node_modules/lenis/src/maths.js","node_modules/src/animate.ts","node_modules/src/dimensions.ts","node_modules/lenis/src/debounce.js","node_modules/src/emitter.ts","node_modules/src/virtual-scroll.ts","node_modules/src/index.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"0a8ecb283d214d75\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import LocomotiveScroll from 'locomotive-scroll';\r\n\r\nconst scroll = new LocomotiveScroll({\r\n    el: document.querySelector('[data-scroll-container]'),\r\n    smooth: true\r\n    \r\n});\r\n\r\nconsole.log('ya');",null,"/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport type { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n","// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n","/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport type {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n","/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport type {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids, 0);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport type { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n","//@ts-ignore\nimport Lenis from 'lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport type {\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\nimport type { LenisOptions } from 'lenis';\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/darkroomengineering/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n    public lenisInstance: any;\n\n    private coreInstance: any;\n\n    private lenisOptions?: LenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n\n        for (const [key] of Object.entries(lenisOptions)) {\n            if ([\"wrapper\", \"content\", \"infinite\"].includes(key)) {\n                console.warn(`Warning: Key \"${key}\" is not possible to edit in Locomotive Scroll.`);\n            }\n        }\n\n        // Get arguments\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            ...this.lenisOptions,\n            wrapper: window,\n            content: document.documentElement,\n            infinite: false\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance?.destroy();\n\n        // Ensure a delay before destroying to handle cases of instant destruction\n        requestAnimationFrame(() => {\n            this.coreInstance?.destroy();\n        });\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.options.smoothWheel,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisInstance.options.duration\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis start method\n        this.lenisInstance?.start();\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis stop method\n        this.lenisInstance?.stop();\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n\nexport * from './types';\n",null,"// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  isRunning: boolean = false\r\n  value: number = 0\r\n  from: number = 0\r\n  to: number = 0\r\n  lerp?: number\r\n  duration?: number = 0\r\n  easing?: Function\r\n  currentTime: number = 0\r\n  onUpdate?: Function\r\n\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    {\r\n      lerp,\r\n      duration,\r\n      easing,\r\n      onStart,\r\n      onUpdate,\r\n    }: {\r\n      lerp?: number\r\n      duration?: number\r\n      easing?: Function\r\n      onStart?: Function\r\n      onUpdate?: Function\r\n    }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\ntype DimensionsOptions = {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  autoResize?: boolean\r\n  debounce?: number\r\n}\r\n\r\nexport class Dimensions {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  width: number = 0\r\n  height: number = 0\r\n  scrollWidth: number = 0\r\n  scrollHeight: number = 0\r\n  debouncedResize?: Function\r\n  wrapperResizeObserver?: ResizeObserver\r\n  contentResizeObserver?: ResizeObserver\r\n\r\n  // @ts-ignore\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  }: DimensionsOptions = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener(\r\n          'resize',\r\n          this.debouncedResize as EventListener,\r\n          false\r\n        )\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(\r\n          this.debouncedResize as ResizeObserverCallback\r\n        )\r\n        this.wrapperResizeObserver.observe(this.wrapper as HTMLElement)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(\r\n        this.debouncedResize as ResizeObserverCallback\r\n      )\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener(\r\n      'resize',\r\n      this.debouncedResize as EventListener,\r\n      false\r\n    )\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit(): {\r\n    x: number\r\n    y: number\r\n  } {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  events: Record<string, Function[]>\r\n\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event: string, ...args: any[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(callback) || (this.events[event] = [callback])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n    }\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  element: HTMLElement | Window\r\n  wheelMultiplier: number\r\n  touchMultiplier: number\r\n  touchStart: {\r\n    x: number | null\r\n    y: number | null\r\n  }\r\n  emitter: Emitter\r\n  lastDelta: {\r\n    x: number\r\n    y: number\r\n  } = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  windowWidth: number = 0\r\n  windowHeight: number = 0\r\n\r\n  constructor(\r\n    element: HTMLElement | Window,\r\n    { wheelMultiplier = 1, touchMultiplier = 1 }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel as EventListener, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel as EventListener)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener\r\n    )\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - (this.touchStart?.x ?? 0)) * this.touchMultiplier\r\n    const deltaY = -(clientY - (this.touchStart?.y ?? 0)) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype Overwrite<T, R> = Omit<T, keyof R> & R\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\ntype Scrolling = boolean | 'native' | 'smooth'\r\n\r\ntype onVirtualScrollOptions = {\r\n  deltaX: number\r\n  deltaY: number\r\n  event: WheelEvent | TouchEvent\r\n}\r\n\r\nexport type LenisOptions = Partial<{\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  wheelEventsTarget: Window | HTMLElement\r\n  eventsTarget: Window | HTMLElement\r\n  smoothWheel: boolean\r\n  syncTouch: boolean\r\n  syncTouchLerp: number\r\n  touchInertiaMultiplier: number\r\n  duration: number\r\n  easing: EasingFunction\r\n  lerp: number\r\n  infinite: boolean\r\n  orientation: Orientation\r\n  gestureOrientation: GestureOrientation\r\n  touchMultiplier: number\r\n  wheelMultiplier: number\r\n  autoResize: boolean\r\n  prevent: (node: Element) => boolean\r\n  virtualScroll: (data: onVirtualScrollOptions) => boolean\r\n  __experimental__naiveDimensions: boolean\r\n}>\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: Scrolling = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n  __preventNextNativeScrollEvent?: boolean\r\n  __resetVelocityTimeout?: number\r\n\r\n  isTouching?: boolean\r\n  time: number\r\n  userData: Object = {}\r\n  lastVelocity: number = 0\r\n  velocity: number = 0\r\n  direction: 1 | -1 | 0 = 0\r\n  options: Overwrite<\r\n    LenisOptions,\r\n    {\r\n      wrapper: NonNullable<LenisOptions['wrapper']>\r\n    }\r\n  >\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  animate: Animate\r\n  emitter: Emitter\r\n  dimensions: Dimensions\r\n  virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent,\r\n    virtualScroll,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    // @ts-expect-error\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (\r\n      !wrapper ||\r\n      wrapper === document.documentElement ||\r\n      wrapper === document.body\r\n    ) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      virtualScroll,\r\n      __experimental__naiveDimensions,\r\n    } as LenisOptions\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.options.wrapper.addEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n    this.options.wrapper.removeEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll: number) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\r\n    if (event.button === 1) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = (data: onVirtualScrollOptions) => {\r\n    if (\r\n      typeof this.options.virtualScroll === 'function' &&\r\n      this.options.virtualScroll(data) === false\r\n    )\r\n      return\r\n\r\n    const { deltaX, deltaY, event } = data\r\n\r\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\r\n\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node instanceof Element &&\r\n          ((typeof prevent === 'function' && prevent?.(node)) ||\r\n            node.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n            (node.classList?.contains('lenis') &&\r\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(\r\n        this.animatedScroll - lastScroll\r\n      ) as Lenis['direction']\r\n      // this.isSmooth = false\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (\r\n      typeof target === 'string' &&\r\n      ['top', 'left', 'start'].includes(target)\r\n    ) {\r\n      target = 0\r\n    } else if (\r\n      typeof target === 'string' &&\r\n      ['bottom', 'right', 'end'].includes(target)\r\n    ) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target instanceof HTMLElement && target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.rootElement.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    this.userData = userData\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.preventNextNativeScrollEvent()\r\n      this.emit()\r\n      onComplete?.(this)\r\n      this.userData = {}\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n          this.userData = {}\r\n\r\n          // avoid emitting event twice\r\n          this.preventNextNativeScrollEvent()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  private preventNextNativeScrollEvent() {\r\n    this.__preventNextNativeScrollEvent = true\r\n\r\n    requestAnimationFrame(() => {\r\n      delete this.__preventNextNativeScrollEvent\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return (\r\n      this.options.wrapper === window\r\n        ? document.documentElement\r\n        : this.options.wrapper\r\n    ) as HTMLElement\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: Scrolling) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["IO","_ref","scrollElements","_ref$rootMargin","rootMargin","IORaf","this","observer","_init","_proto","prototype","_this","IntersectionObserver","entries","forEach","entry","$targetItem","find","item","$el","target","isIntersecting","isAlreadyIntersected","_setInview","_setOutOfView","_iterator","_step","_createForOfIteratorHelperLoose","done","observe","value","destroy","disconnect","$scrollElement","unobserve","scrollElement","setInteractivityOn","setInview","setInteractivityOff","setOutOfView","attributes","scrollRepeat","mapRange","inMin","inMax","outMin","outMax","closestNumber","array","reduce","prev","curr","Math","abs","ScrollElement","_this$$el$dataset$scr","_this$$el$dataset$scr2","_this$$el$dataset$scr3","_this$$el$dataset$scr4","_this$$el$dataset$scr5","id","modularInstance","subscribeElementUpdateFn","unsubscribeElementUpdateFn","needRaf","scrollOrientation","intersection","metrics","currentScroll","translateValue","progress","lastProgress","progressModularModules","isInview","isInteractive","isInFold","isFirstResize","scrollClass","dataset","scrollOffset","scrollPosition","scrollModuleProgress","scrollCssProgress","scrollEventProgress","scrollSpeed","parseFloat","scrollCall","scrollCallSelf","scrollIgnoreFold","scrollEnableTouchSpeed","start","end","offsetStart","offsetEnd","bcr","window","scrollY","scrollX","_getProgressModularModules","_resize","onResize","_ref2","onRender","_ref3","smooth","wSize","innerHeight","innerWidth","_computeProgress","isNaN","max","style","transform","classList","add","from","_getScrollCallFrom","_dispatchCall","remove","getBoundingClientRect","_computeMetrics","_computeIntersection","_this$metrics$bcr","metricsSize","height","width","top","left","offset","split","undefined","trim","scrollPositionStart","scrollPositionEnd","viewportStart","includes","parseInt","replace","viewportEnd","forcedProgress","_setCssProgress","_setCustomEventProgress","modularModules","call","moduleName","moduleId","currentProgress","setProperty","toString","customEventName","customEvent","CustomEvent","detail","dispatchEvent","modulesIdNames","Object","keys","filter","key","modules","length","_iterator2","_step2","_step3","_iterator3","module","push","moduleObj","closestIntersectionValue","way","_this$attributes$scro","_this$attributes","callParameters","callSelf","_targetModuleId","targetModuleId","func","ATTRIBUTES_THAT_NEED_RAF","Core","triggerRootMargin","rafRootMargin","$scrollContainer","triggeredScrollElements","RAFScrollElements","scrollElementsToUpdate","IOTriggerInstance","IORafInstance","console","error","$scrollElements","querySelectorAll","$scrollElementsArr","Array","_subscribeScrollElements","concat","_unsubscribeAllScrollElements","removeScrollElements","$oldContainer","$scrollElementsToRemove","index","indexOf","splice","targetScrollElementToUpdate","targetScrollElement","_unsubscribeElementUpdate","scrollElementItem","addScrollElements","$newContainer","ids","fromIndex","apply","toObserve","_checkRafNeeded","scrollElementInstance","_subscribeElementUpdate","bind","scrollElementToUpdate","attributesThatNeedRaf","removeAttribute","attributeToRemove","attribute","map","test","join","RO","resizeElements","_ref$resizeCallback","resizeCallback","$resizeElements","isFirstObserve","ResizeObserver","LocomotiveScroll","_temp","_ref$lenisOptions","lenisOptions","_ref$autoResize","autoResize","_ref$autoStart","autoStart","_ref$scrollCallback","scrollCallback","initCustomTicker","destroyCustomTicker","rafPlaying","lenisInstance","coreInstance","rafInstance","ROInstance","_onRenderBind","_onResizeBind","_onScrollToBind","_i","_Object$entries","warn","assign","_onRender","_onScrollTo","_onResize","_this$lenisInstance","Lenis","_extends","wrapper","content","document","documentElement","infinite","on","setAttribute","options","orientation","requestAnimationFrame","rootElement","_bindEvents","_this$coreInstance","_this2","stop","_unbindEvents","_this2$coreInstance","_bindScrollToEvents","body","addEventListener","_unbindScrollToEvents","removeEventListener","$container","_this3","$rootContainer","$scrollToElements","_this4","_this5","_this5$coreInstance","scroll","_this$lenisInstance2","_this$coreInstance2","raf","Date","now","smoothWheel","event","_event$currentTarget","preventDefault","$target","currentTarget","getAttribute","duration","scrollTo","_this$lenisInstance3","_raf","_this$lenisInstance4","cancelAnimationFrame","_this$coreInstance3","_this$coreInstance4","_this6","resize","_this$lenisInstance5","lerp","immediate","lock","force","easing","onComplete","_this7","clamp","min","input","Animate","constructor","isRunning","to","currentTime","advance","deltaTime","completed","linearProgress","easedProgress","damp","x","y","lambda","dt","t","exp","round","_a","onUpdate","fromTo","onStart","Dimensions","debounce","debounceValue","scrollWidth","scrollHeight","onWrapperResize","onContentResize","HTMLElement","clientWidth","clientHeight","debouncedResize","callback","delay","timer","args","arguments","context","clearTimeout","setTimeout","wrapperResizeObserver","contentResizeObserver","_b","limit","Emitter","events","emit","callbacks","i","off","LINE_HEIGHT","VirtualScroll","element","wheelMultiplier","touchMultiplier","lastDelta","windowWidth","windowHeight","onTouchStart","clientX","clientY","targetTouches","touchStart","emitter","deltaX","deltaY","onTouchMove","_d","_c","onTouchEnd","onWheel","deltaMode","onWindowResize","passive","wheelEventsTarget","eventsTarget","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","gestureOrientation","prevent","virtualScroll","__experimental__naiveDimensions","__isScrolling","__isStopped","__isLocked","userData","lastVelocity","velocity","direction","onPointerDown","button","reset","onVirtualScroll","data","ctrlKey","isTouch","type","isWheel","isTouching","isStopped","isLocked","isClick","isUnknownGesture","composedPath","slice","node","Element","hasAttribute","contains","_e","isScrolling","animate","delta","hasTouchInertia","targetScroll","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","lastScroll","animatedScroll","actualScroll","sign","lenisVersion","dimensions","updateClassName","time","cleanUpClassName","setScroll","isHorizontal","scrollLeft","scrollTop","querySelector","nodeType","wrapperRect","rect","preventNextNativeScrollEvent","modulo","n","d","isSmooth","className"],"version":3,"file":"index.3d214d75.js.map","sourceRoot":"/__parcel_source_root/"}